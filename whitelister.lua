--[[
        
        WHITELISTER FOR COEMWARE!
        
]]--

do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;local v16;while true do if (v0==2) then v7=table.concat;v8=table.insert;v9=math.ldexp;v0=3;end if (0==v0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==3) then v10=getfenv or function()return _ENV;end ;v11=setmetatable;v12=pcall;v0=4;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end if (4==v0) then v13=select;v14=unpack or table.unpack ;v15=tonumber;v0=5;end if (5==v0) then v16=nil;v16=function(v25,v26,...)local v27=1;local v28;v25=v5(v4(v25,5),"..",function(v29)if (v2(v29,2)==79) then local v82=0;while true do if (v82==0) then v28=v1(v4(v29,1,1));return "";end end else local v83=v3(v1(v29,16));if v28 then local v89=0;local v90;while true do if (v89==1) then return v90;end if (v89==0) then v90=v6(v83,v28);v28=nil;v89=1;end end else return v83;end end end);local function v30(v31,v32,v33)if v33 then local v84=0;local v85;while true do if (((889 -(739 + 150)) -0)==v84) then v85=(v31/(2^(v32-(438 -(292 + 145)))))%((1648 -((756 -(85 + 63)) + 1038))^(((v33-(2 -1)) -(v32-(965 -(505 + 459)))) + 1)) ;return v85-(v85%(3 -2)) ;end end else local v86=(1 + (147 -(108 + 38)))^(v32-1) ;return (((v31%(v86 + v86))>=v86) and (201 -(46 + 154))) or (0 + 0) ;end end local function v34()local v47=0 + 0 ;local v48;while true do if (v47==((1290 -(727 + 563)) + 0 + 0)) then v48=v2(v25,v27,v27);v27=v27 + (1242 -(389 + 852)) ;v47=629 -(44 + 584) ;end if (v47==(1 -0)) then return v48;end end end local function v35()local v49=0;local v50;local v51;while true do if (v49==(3 -2)) then return (v51 * (5 + 32 + 219)) + v50 ;end if (v49==(0 + (1938 -(1681 + 257)))) then v50,v51=v2(v25,v27,v27 + 2 + 0 );v27=v27 + 2 + 0 + 0 ;v49=1 -(0 -0) ;end end end local function v36()local v52,v53,v54,v55=v2(v25,v27,v27 + 3 );v27=v27 + (14 -10) ;return (v55 * (16777555 -(200 + 139))) + (v54 * (123965 -58429)) + (v53 * ((2566 -(1582 + 167)) -(420 + 28 + 113))) + v52 ;end local function v37()local v56=1399 -(562 + 28 + 809) ;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (((346 -(235 + 108)) + 0)==v56) then if (v61==0) then if (v60==(0 -0)) then return v62 * (0 + 0) ;else v61=3 -2 ;v59=0 -(0 -0) ;end elseif (v61==2047) then return ((v60==(0 + 0)) and (v62 * (((865 -(510 + 354)) + 0)/(1013 -(731 + 282))))) or (v62 * NaN) ;end return v9(v62,v61-1023 ) * (v59 + (v60/((2 + 0)^((69 + 88) -105)))) ;end if (v56==((0 -0) + 0)) then v57=v36();v58=v36();v56=(661 + 1130) -(1502 + 288) ;end if (v56==(1945 -(78 + 1866))) then v59=1792 -(400 + 1391) ;v60=(v30(v58,2 -1 ,55 -(19 + 16) ) * ((7 -5)^32)) + v57 ;v56=2 + (0 -0) ;end if (2==v56) then v61=v30(v58,12 + 9 ,17 + 3 + 11 );v62=((v30(v58,(11 + 92) -(6 + 65) )==(1 -0)) and  -(1276 -(709 + 566))) or ((812 -525) -(97 + 189)) ;v56=37 -(9 + 25) ;end end end local function v38(v39)local v63=0 + 0 ;local v64;local v65;while true do if (v63==1) then v64=v4(v25,v27,(v27 + v39) -(1 + 0) );v27=v27 + v39 ;v63=1897 -(356 + 1539) ;end if (v63==((1411 -911) -(84 + 413))) then return v7(v65);end if (v63==(0 -0)) then v64=nil;if  not v39 then local v103=0 -0 ;while true do if (v103==0) then v39=v36();if (v39==((2287 -714) -(118 + 181 + 1274))) then return "";end break;end end end v63=1;end if (v63==(1 + 1)) then v65={};for v91=975 -(334 + (1752 -1112)) , #v64 do v65[v91]=v3(v2(v4(v64,v91,v91)));end v63=4 -(224 -(69 + 154)) ;end end end local v40=v36;local function v41(...)return {...},v13("#",...);end local function v42()local v66=0;local v67;local v68;local v69;local v70;local v71;local v72;while true do if (v66~=0) then else v67={};v68={};v69={};v66=1 + 0 ;end if (v66==1) then v70={v67,v68,nil,v69};v71=v36();v72={};v66=2;end if ((3 + 0)==v66) then local v87=0 + 0 ;while true do local v93=1038 -(1010 + 28) ;while true do if (v93==0) then if (v87~=(0 + 0)) then else for v122=1,v36() do v68[v122-1 ]=v42();end for v124=1,v36() do v69[v124]=v36();end v87=4 -3 ;end if (v87~=1) then else return v70;end break;end end end end if (v66~=2) then else for v94=1891 -(768 + 1122) ,v71 do local v95=1402 -(1065 + 337) ;local v96;local v97;local v98;while true do if (v95==0) then v96=0 + 0 ;v97=nil;v95=1;end if (v95==(1080 -(628 + 451))) then v98=nil;while true do if (v96==1) then if (v97==(1991 -(1443 + 547))) then v98=v34()~=0 ;elseif (v97==(451 -(255 + 194))) then v98=v37();elseif (v97~=(1909 -(407 + 1499))) then else v98=v38();end v72[v94]=v98;break;end if ((0 + 0)~=v96) then else local v127=0 + 0 ;local v128;while true do if (0~=v127) then else v128=0;while true do if (v128==0) then local v139=0;while true do if ((1 + 0)==v139) then v128=1 -0 ;break;end if (v139==(1452 -(588 + 864))) then v97=v34();v98=nil;v139=1;end end end if (v128==(755 -(546 + 208))) then v96=1436 -(315 + 1120) ;break;end end break;end end end end break;end end end v70[3]=v34();for v99=1,v36() do local v100=0;local v101;local v102;while true do if (v100==1) then while true do if (v101==(0 + 0)) then v102=v34();if (v30(v102,1,1)~=0) then else local v129=0;local v130;local v131;local v132;while true do if (1~=v129) then else local v135=0;while true do if (v135==1) then v129=2;break;end if (v135~=(0 + 0)) then else v132={v35(),v35(),nil,nil};if (v130==(1376 -(577 + 799))) then local v143=0 + 0 ;local v144;while true do if (v143==0) then v144=0 + 0 ;while true do if (v144==(0 + 0)) then v132[1 + 2 ]=v35();v132[1470 -(1215 + 251) ]=v35();break;end end break;end end elseif (v130==(1 -0)) then v132[3]=v36();elseif (v130==2) then v132[3]=v36() -(2^16) ;elseif (v130==(2 + 1)) then local v252=0 + 0 ;local v253;while true do if (v252==(0 -0)) then v253=0;while true do if (v253~=0) then else v132[2 + 1 ]=v36() -((1426 -(1120 + 304))^16) ;v132[4]=v35();break;end end break;end end end v135=1 + 0 ;end end end if (v129==(7 -5)) then local v136=0;while true do if (v136==1) then v129=3;break;end if (v136==(0 + 0)) then if (v30(v131,1,3 -2 )~=(1 + 0)) then else v132[2]=v72[v132[7 -5 ]];end if (v30(v131,2,2)==(1 + 0)) then v132[5 -2 ]=v72[v132[870 -(172 + 695) ]];end v136=1;end end end if (v129==(5 -2)) then if (v30(v131,1508 -(1285 + 220) ,3)==1) then v132[4]=v72[v132[4]];end v67[v99]=v132;break;end if (v129==0) then local v138=1977 -(824 + 1153) ;while true do if (v138==(2 -1)) then v129=1;break;end if ((418 -(366 + 52))==v138) then local v142=0;while true do if (v142==1) then v138=597 -(468 + 128) ;break;end if (v142==(0 + 0)) then v130=v30(v102,1226 -(698 + 526) ,3);v131=v30(v102,2 + 2 ,1001 -(55 + 940) );v142=1;end end end end end end end break;end end break;end if (v100==0) then v101=1498 -(1457 + 41) ;v102=nil;v100=1;end end end v66=3;end end end local function v43(v44,v45,v46)local v73=v44[1];local v74=v44[2];local v75=v44[3];return function(...)local v76=0;local v77;local v78;local v79;local v80;local v81;while true do if (v76==2) then v81=nil;v81=function()local v104=v73;local v105=v74;local v106=v75;local v107=v41;local v108={};local v109={};local v110={};for v114=0 -0 ,v80 do if (((2359 + 1590)>(647 -201)) and (v114>=v106)) then v108[v114-v106 ]=v79[v114 + 1 + (511 -(10 + 501)) ];else v110[v114]=v79[v114 + (1 -0) ];end end local v111=(v80-v106) + (141 -(91 + 49)) ;local v112;local v113;while true do local v115=454 -(60 + 394) ;local v116;while true do if ((v115==(0 -0)) or ((17764 -(15615 -(867 + 562)))<(1782 -(30 + 23)))) then v116=0 -0 ;while true do if (((678 -(119 + 559))==v116) or ((584 -((1004 -(410 + 252)) + 160))==(3250 + 1161))) then v112=v104[v77];v113=v112[1 + 0 ];v116=1 -0 ;end if (((7272 -3380)>=(1961 + 739)) and (1==v116)) then if ((v113<=(1936 -(886 + 1032))) or ((863 + 100 + 1026)<(280 -(68 + 25)))) then if ((v113<=(23 -15)) or ((1746 + 772)>((22859 -15874) -3802))) then if ((v113<=(4 -1)) or ((5198 -(1273 + 1))<=(1785 -(305 + 905)))) then if ((v113<=(2 -(1017 -(334 + 682)))) or ((187 + 1386)==(123 + 476))) then if ((v113>(0 -0)) or (1708>=(4412 -(387 + 1053)))) then local v150=0 -0 ;local v151;local v152;local v153;local v154;local v155;while true do if ((v150==1) or ((10029 -(6956 -(994 + 141)))<=(1288 -(82 + 249)))) then v153=nil;v154=nil;v150=1 + 1 + 0 ;end if ((v150==(605 -(551 + 54))) or ((5469 -(962 + 950))==(3609 + 689))) then v151=1538 -(735 + 803) ;v152=nil;v150=1 + 0 ;end if (((11692 -7809)<(2090 + 2869)) and ((8 -6)==v150)) then v155=nil;while true do if ((v151==((1800 -(1742 + 55)) -2)) or ((1020 + 54)<=(2110 -(94 + 1385)))) then local v260=125 -(17 + 108) ;while true do if (((11371 -7381)>=(1220 -657)) and (v260==(0 -0))) then v78=(v154 + v152) -(1 -0) ;v155=0 -0 ;v260=1;end if ((v260==((676 -(577 + 98)) + 0)) or ((3168 -1944)==(5456 -(1132 + 725)))) then v151=1 + 1 ;break;end end end if (((1581 -((1873 -(1585 + 195)) + 1488))==v151) or (((832 -487) -(34 + 81))>=((2451 -(195 + 9)) -1667))) then local v261=435 -(307 + 128) ;local v262;while true do if (((344 -(321 + 23))==v261) or ((3175 -(200 + 86))>=(11769 -8637))) then v262=0 + 0 ;while true do if (((813 + 447)>=(1303 -((1894 -(687 + 111)) + 154))) and (v262==(0 + 0))) then v152=v112[4 -2 ];v153,v154=v107(v110[v152](v14(v110,v152 + (2 -1) ,v78)));v262=578 -(199 + 378) ;end if ((v262==(1 + 0)) or ((94 + 276)>(4554 -(1073 + 144)))) then v151=1 + (0 -0) ;break;end end break;end end end if (((2796 -(808 + 266))<(4323 -(100 + 372))) and (v151==2)) then for v286=v152,v78 do local v287=255 -(168 + 87) ;while true do if ((v287==(0 + 0)) or ((671 + 1451)==(1004 + 3567))) then v155=v155 + 1 + (1391 -(95 + 1296)) ;v110[v286]=v153[v155];break;end end end break;end end break;end end else v110[v112[2 -0 ]]=v110[v112[10 -7 ]];end elseif (((3627 -(3014 -1059))>(2251 -657)) and (v113>((13 -7) -4))) then if ((v110[v112[1589 -(551 + 1036) ]]==v110[v112[810 -(84 + 722) ]]) or ((518 -317)>=(653 + 903))) then v77=v77 + (1992 -(693 + (4320 -3022))) ;else v77=v112[622 -(199 + (1578 -1158)) ];end else v110[v112[2]]=v110[v112[3 + 0 ]] + v112[2 + (387 -(265 + 120)) ] ;end elseif ((v113<=(4 + 1)) or ((4417 -(92 + 167))==(7121 -3546))) then if ((v113==(1956 -(881 + 1071))) or ((5052 -(663 + 81))<=(2755 + 495))) then v110[v112[4 -2 ]]=v110[v112[1622 -(513 + 1106) ]][v112[6 -2 ]];else local v161=0 + 0 ;local v162;while true do if (((1093 -(431 + 200))<(4716 -3083)) and (((199 + 239) -(391 + 47))==v161)) then v162=v112[4 -2 ];v110[v162]=v110[v162]();break;end end end elseif ((v113<=6) or ((8 -5)>(15863 -11138))) then local v163=1711 -(1704 + 7) ;local v164;local v165;local v166;local v167;local v168;while true do if (((2154 -(1296 + 543))<(2023 -(156 + 507))) and (v163==(1 + 0))) then v166=nil;v167=nil;v163=(2201 -(168 + 49)) -(1927 + 55) ;end if (((897 + 505)<(6564 -(943 + 522 + 148))) and (v163==(1 + 1))) then v168=nil;while true do if ((v164==(171 -(18 + 153))) or ((2685 -(335 + 76))>=(4247 -(114 + 994)))) then v165=v112[1 + 1 ];v166,v167=v107(v110[v165](v14(v110,v165 + (3 -(2 -0)) ,v112[2 + 1 ])));v164=1 + 0 + 0 ;end if ((v164==(1494 -(900 + 593))) or ((9440 -7366)>(2944 + 1288))) then v78=(v167 + v165) -(1 + 0) ;v168=0 -0 ;v164=2;end if ((194<=(319 + 25)) and (v164==(5 -(11 -8)))) then for v288=v165,v78 do local v289=285 -(283 + (514 -(192 + 320))) ;while true do if ((v289==(0 -(0 + 0))) or ((906 -315)>(5072 -(1297 + 435)))) then v168=v168 + (1 -0) ;v110[v288]=v166[v168];break;end end end break;end end break;end if (((2517 + (529 -385))<=(3839 -(2021 -(899 + 161)))) and (v163==(0 + 0))) then v164=0 -0 ;v165=nil;v163=2 -1 ;end end elseif (((1062 -(202 + 88))<=(4213 -(860 + 569))) and (v113==((2004 -1316) -(26 + (1034 -(203 + 176)))))) then local v210=0 + 0 ;local v211;local v212;while true do if ((v210==(1892 -(986 + 906))) or ((4825 -(43 + 223))<((1185 + 427) -(397 + 280)))) then local v255=(0 -0) -(0 -0) ;while true do if ((v255==(0 -(1590 -(44 + 1546)))) or ((6692 -4799)>=(12270 -7787))) then v211=v112[(1604 -(305 + 1297)) -(0 -0) ];v212={};v255=804 -(370 + 433) ;end if (((4807 -(69 + 1801))<(2520 + 498)) and (v255==(4 -3))) then v210=(94 -52) -(23 + 18) ;break;end end end if (((5245 -(300 + 1037))==(11202 -7294)) and (v210==(285 -(83 + 201)))) then for v264=3 -2 , #v109 do local v265=0 + 0 ;local v266;local v267;while true do if (((1321 -(454 + 784))<=(4449 -(274 + 1539))) and ((0 -0)==v265)) then local v308=0 -0 ;while true do if ((v308==(0 + 0)) or ((6837 -2297)==(3280 -(59 + 747)))) then v266=0 + 0 ;v267=nil;v308=1 + 0 ;end if ((v308==(3 -2)) or (2905==(1029 + 420 + 2430))) then v265=1463 -((986 -471) + 947) ;break;end end end if ((v265==1) or (2894<=(1710 -(322 + 91)))) then while true do if ((((2632 -1461) + 123)<(10286 -5971)) and (v266==(0 -(286 -(26 + 260))))) then v267=v109[v264];for v333=0 -0 , #v267 do local v334=0 + 0 ;local v335;local v336;local v337;local v338;local v339;while true do if ((v334==(1881 -(1413 + 468))) or ((3504 + (1956 -1291))<=((270 -(120 + 98)) + 5 + 4))) then v335=0 -0 ;v336=nil;v334=1 -0 ;end if ((v334==(1830 -(1021 + 808))) or ((5108 -(538 + 2539))<=(711 + 289))) then v337=nil;v338=nil;v334=1 + 1 ;end if ((v334==(1 + 1)) or ((3221 + 753)<(2336 + 540))) then v339=nil;while true do if (((10705 -8227)<=(3786 -1056)) and (v335==(2 -(1557 -(925 + 632))))) then while true do if ((v336==(1 + 0)) or ((3817 -(35 + 978))==(4892 -(438 + (806 -411))))) then v339=v337[1 + 1 ];if (((4162 -2544)>=899) and (v338==v110) and (v339>=v211)) then local v355=1838 -(1407 + 431) ;local v356;while true do if (((1161 + 1897)>(1148 -(167 + 591))) and ((1471 -((131 -89) + 1429))==v355)) then v356=0 -0 ;while true do if (((4819 -(1059 + 874))>685) and (v356==((791 + 553) -(335 + 1009)))) then v212[v339]=v338[v339];v337[1 + 0 + 0 ]=v212;break;end end break;end end end break;end if (((42 + 3899)==(1881 + (2573 -(126 + 387)))) and ((0 -0)==v336)) then local v354=0;while true do if (((389 + 350)<(2043 + 263)) and (v354==(1 + 0))) then v336=1 + 0 ;break;end if ((v354==(0 + 0)) or ((5640 -(288 + 792))<=(1687 -((2324 -(1473 + 81)) + 224)))) then v337=v267[v333];v338=v337[1 -0 ];v354=2 -1 ;end end end end break;end if ((v335==1) or ((4575 -((1168 -472) + 1179))<=(2905 -(208 + 1300)))) then v338=nil;v339=nil;v335=5 -3 ;end if ((v335==(0 -0)) or ((8932 -6655)>=(4019 -(407 + (470 -289))))) then v336=0 -0 ;v337=nil;v335=1 + 0 ;end end break;end end end break;end end break;end end end break;end end else v110[v112[2 + 0 ]]=v112[1678 -(983 + 692) ];end elseif ((v113<=((723 -(155 + 558)) + 3)) or (((14878 -(1014 + 313)) -(47068 -37279))>=(2387 + (3931 -(1006 + 399))))) then if ((472>(54 + 35)) and (v113<=(8 + 2))) then if (((9569 -6292)<=(470 + 4282)) and (v113==(7 + 2))) then local v169=0 + 0 ;local v170;local v171;while true do if (((106 + 1546)<=(5597 -((775 -264) + 886))) and (v169==(1 + 0))) then while true do if (((6182 -2618)>=(190 + 261)) and (((660 -(122 + 168)) -(53 + (1569 -(253 + 999))))==v170)) then v171=v112[2 + 0 ];v110[v171]=v110[v171](v110[v171 + (2 -1) ]);break;end end break;end if ((v169==(0 + 0)) or ((8059 -3854)<(4132 -(222 + 141)))) then local v243=0 + 0 ;while true do if ((v243==(0 + 0)) or ((10636 -6822)<=(118 + 1570))) then v170=0 -0 ;v171=nil;v243=1;end if ((v243==(1 + 0)) or ((10590 -7844)>=(3954 -1093))) then v169=1 + 0 ;break;end end end end else v110[v112[2 + 0 ]]=v46[v112[6 -3 ]];end elseif (((5774 -1716)==((10635 -3726) -2851)) and (v113<=(6 + 5))) then local v174=0 + 0 ;local v175;while true do if (((13562 -10192)==(4664 -(557 + (2661 -1924)))) and (v174==(1713 -(924 + 789)))) then v175=v112[2 + 0 ];v110[v175](v14(v110,v175 + ((2011 -(1072 + 719)) -(8 + 211)) ,v112[2 + 1 ]));break;end end elseif ((v113==(38 -26)) or ((6377 -(588 + 1375))==(17379 -12572))) then v110[v112[553 -(291 + 260) ]][v110[v112[717 -(153 + 561) ]]]=v110[v112[6 -2 ]];else v110[v112[2 + 0 ]]=v43(v105[v112[400 -(267 + 130) ]],nil,v46);end elseif ((v113<=(53 -38)) or (4319<=(2877 -2038))) then if ((v113>(13 + 1 + 0)) or ((289 -90)>=(5442 -(1646 + (440 -157))))) then v77=v112[2 + 1 ];else v110[v112[2]]();end elseif ((v113<=(42 -26)) or ((1106 + 1359)<(1427 -(1306 + 116)))) then local v177=(2491 -1567) -(668 + 256) ;local v178;local v179;local v180;local v181;while true do if ((v177==(0 + 0)) or ((24 + 19)>(4349 + 200))) then v178=0 + 0 ;v179=nil;v177=568 -(89 + (1228 -750)) ;end if ((v177==(1590 -(681 + 908))) or ((152 + 25)==(4574 -1985))) then v180=nil;v181=nil;v177=3 -1 ;end if ((v177==(2 -0)) or ((4037 -(1339 + 310))<(411 + 1212))) then while true do if ((v178==((3498 -(829 + 729)) -(1373 + 567))) or ((877 + 118)>=(2216 -(149 + 597)))) then local v270=0 + 0 ;while true do if (((2 -1)==v270) or ((5168 -((140 -79) + 818))>=(5283 -(669 + 90)))) then v178=484 -(427 + 56) ;break;end if (((0 -0)==v270) or (4315>=(6393 -(1319 + 257)))) then v179=v112[2];v180={v110[v179](v110[v179 + (3 -2) ])};v270=(1113 + 257) -(654 + 223 + 492) ;end end end if ((v178==(1 -0)) or ((1721 + 964)<((2053 -860) -798))) then v181=0 + 0 ;for v290=v179,v112[7 -3 ] do local v291=0 -0 ;local v292;while true do if ((v291==(0 + 0)) or ((4282 -(208 + 34))<=(4471 -(404 + 167)))) then v292=0 + 0 ;while true do if (((6039 -2892)==(14806 -11659)) and (v292==(0 -0))) then v181=v181 + (492 -(359 + 132)) ;v110[v290]=v180[v181];break;end end break;end end end break;end end break;end end elseif ((v113>((114 -66) -31)) or (((1007 + 1009) -(601 + 1384))>=((4120 -1022) -((967 -615) + 467)))) then v110[v112[(1 + 1) -0 ]]={};else for v245=v112[1 + 1 ],v112[3] do v110[v245]=nil;end end elseif ((v113<=(1625 -(241 + 1357))) or ((80 + (1899 -(195 + 1605)))>((259 + 5303) -(79 + 565)))) then if ((v113<=(1862 -(110 + 1730))) or ((5218 -2321)==(4839 -(12 + 4)))) then if ((v113<=(2 + 16 + 2)) or ((2873 + 1628)<(529 + 37))) then if ((v113>(803 -(22 + 279 + 483))) or ((332 + 1357)==(1171 -325))) then v110[v112[1075 -(214 + 859) ]][v112[2 + 1 ]]=v112[1071 -(117 + 210 + 740) ];else local v184=587 -(236 + 351) ;local v185;local v186;while true do if (((506 + 1211)==(297 + 1420)) and (v184==(1 -0))) then while true do if (((5321 -(750 + 976))>((240 + 711) -(451 + 211))) and ((0 -0)==v185)) then v186=v112[6 -4 ];v110[v186](v110[v186 + (1430 -(462 + 967)) ]);break;end end break;end if ((v184==(0 + 0)) or ((85 -47)>=(52 + 27))) then v185=1925 -(1401 + 464 + 60) ;v186=nil;v184=1867 -(1383 + 483) ;end end end elseif ((v113==(16 + 5)) or (((7178 -(1482 + 376)) -(198 + 1045))<(2249 -(773 + 602)))) then local v187=0;local v188;local v189;local v190;while true do if (((3084 -1936)==(1099 + 49)) and (v187==(0 + 0))) then v188=1849 -(977 + 872) ;v189=nil;v187=1071 -(4 + 1066) ;end if (((2159 -(982 + 567))==(225 + 50 + (1623 -1288))) and (v187==(2 -1))) then v190=nil;while true do if ((v188==(0 -0)) or ((6558 -3287)==(330 + 2642))) then local v272=85 -(4 + 45 + 36) ;while true do if ((v272==(0 + 0 + 0)) or ((688 + 831)>=(2043 -(67 + 310)))) then v189=0 -0 ;v190=nil;v272=1794 -(1403 + 390) ;end if (((103 -59)<(4269 -(396 + 815))) and (v272==1)) then v188=2 -1 ;break;end end end if ((621==(1824 -((427 -268) + 394 + 650))) and ((2 -1)==v188)) then while true do if ((v189==(794 -(151 + 643))) or ((106 + 1024)>((9103 -(329 + 759)) -5590))) then v190=v112[(2 + 0) -0 ];v110[v190]=v110[v190](v14(v110,v190 + (2 -1) ,v112[1 + 2 ]));break;end end break;end end break;end end elseif ((v112[1 + (1531 -(209 + 1321)) ]==v110[v112[15 -11 ]]) or ((9692 -6230)>(7499 -2837))) then v77=v77 + (511 -(205 + 305)) ;else v77=v112[6 -3 ];end elseif (((1276 + 1579)==(852 + 2003)) and (v113<=24)) then if ((v113>(60 -37)) or ((6907 -3146)==((3461 + 386) -(122 + 384)))) then if ((v110[v112[1 + 1 ]]==v112[3 + 1 ]) or ((61 + 2816)<=(2199 -((893 -263) + 798)))) then v77=v77 + (1002 -(672 + (659 -(175 + 155)))) ;else v77=v112[768 -(447 + 318) ];end else local v191=0 + 0 ;local v192;while true do if ((v191==((2208 -(334 + 1349)) -(460 + 65))) or ((1491 + (4598 -3061))==(1702 + 2121))) then v192=v112[1735 -(860 + 873) ];v110[v192]=v110[v192](v14(v110,v192 + 1 + 0 ,v78));break;end end end elseif ((v113<=(84 -59)) or (((6094 -(529 + 122)) -(443 + 1543))==(1786 -(358 + 299)))) then local v193=1421 -(707 + 714) ;local v194;local v195;local v196;local v197;local v198;local v199;while true do if (((19552 -15592)==(11977 -(12308 -4291))) and (v193==(1415 -(1012 + 402)))) then v196=nil;v197=nil;v193=(27 -20) -5 ;end if ((v193==(8 -5)) or ((261 + 3061)==((13671 -(214 + 71)) -8816))) then while true do if ((v194==(10 -7)) or ((3797 -(6291 -4050))>=(3196 -(59 + 1431)))) then if (((4940 -2167)<=((2671 -1352) + 1610)) and v199) then local v297=1624 -(1616 + 8) ;local v298;while true do if (((3845 -806)>(11054 -8026)) and (v297==(878 -(526 + 352)))) then v298=0 + 0 ;while true do if ((((1021 -(304 + 310)) + 1018)<=(13399 -9911)) and (0==v298)) then v110[v197]=v199;v77=v112[2 + 1 ];break;end end break;end end else v77=v77 + 1 + 0 ;end break;end if (((19252 -15390)>=(2768 -(271 + 564))) and (v194==(1329 -(50 + 1279)))) then v195=v112[1123 -(486 + 635) ];v196=v112[708 -(352 + 352) ];v194=1 + 0 ;end if (((3570 + 103)<(6200 -(1469 + 159))) and (v194==(2 + 0))) then for v293=1 + 0 ,v196 do v110[v197 + v293 ]=v198[v293];end v199=v198[1 + 0 ];v194=3 + 0 ;end if (((1563 + 470)>=(4190 -2297)) and (v194==(1352 -(1252 + 99)))) then local v276=366 -(288 + 78) ;while true do if ((v276==1) or ((3960 -(517 + 1001))>=(4250 -(858 + 620)))) then v194=(1 -0) + 1 ;break;end if (((3784 -(768 + 788))>(2889 -2088)) and (v276==(1851 -(1699 + 152)))) then v197=v195 + (9 -(3 + 4)) ;v198={v110[v195](v110[v195 + (1 -0) ],v110[v197])};v276=1 -0 ;end end end end break;end if (((1700 + 938)<((2209 -853) + 2043 + 488)) and (v193==(0 -0))) then v194=0;v195=nil;v193=1 + 0 ;end if ((v193==(231 -(200 + 29))) or ((2082 + (3396 -(1539 + 92)))==(1682 -(390 + 389)))) then v198=nil;v199=nil;v193=376 -(341 + 32) ;end end elseif (((3088 -2163)<=(138 + (3523 -2134))) and (v113>((14 + 24) -12))) then local v221=0 -0 ;local v222;local v223;local v224;local v225;local v226;while true do if ((v221==(2 -0)) or ((3138 -(8162 -6102))>=((10402 -5462) -(1872 + 46)))) then v226=nil;while true do if ((v222==(0 + 0)) or ((1289 + 771)>=(15050 -10925))) then v223=v112[1 + (2 -1) ];v224,v225=v107(v110[v223](v110[v223 + 1 + (1007 -(260 + 747)) ]));v222=45 -(33 + (1496 -(453 + 1032))) ;end if (((881 + 69)>=(2542 -(3675 -(710 + 1230)))) and ((1 + (0 -0))==v222)) then local v300=0 + 0 ;while true do if (((3069 -632)<=(6410 -3404)) and (v300==(1 + 0))) then v222=1 + 1 ;break;end if (((213 + 13)<=((7175 -3991) -2255)) and (v300==(0 -0))) then v78=(v225 + v223) -(1 + 0) ;v226=0 + 0 ;v300=2 -1 ;end end end if ((1489>(47 + 407)) and (v222==(4 -2))) then for v312=v223,v78 do local v313=(1143 -(479 + 664)) -0 ;local v314;while true do if ((v313==(0 + (0 -0))) or ((3355 -(494 + (1402 -950)))>(5562 -1194))) then v314=0 + 0 ;while true do if (((803 -(533 + 227))==(41 + (4 -2))) and (v314==(0 + 0))) then v226=v226 + (1678 -(682 + 995)) ;v110[v312]=v224[v226];break;end end break;end end end break;end end break;end if ((v221==(1070 -(562 + 508))) or ((11760 -7766)<((2307 -681) + 754))) then v222=0 + 0 ;v223=nil;v221=1 + 0 ;end if (((4572 -(223 + 59))>(1555 -(539 + 73))) and (v221==(1 -0))) then v224=nil;v225=nil;v221=1 + 1 ;end end else local v227=0 -0 ;local v228;local v229;local v230;while true do if (((902 + 3729)>(1576 + 840)) and (v227==(505 -(446 + 57)))) then for v277=1,v112[3 + 1 ] do local v278=1901 -(199 + 1702) ;local v279;local v280;while true do if ((v278==(0 + 0)) or ((1283 + 424)<=(2332 -874))) then v279=1321 -(1164 + 157) ;v280=nil;v278=1677 -((982 -(234 + 24)) + 952) ;end if (((777 + (707 -268))<(500 + 1214)) and (v278==(1052 -(845 + 206)))) then while true do if (((5855 -(139 + 908))==(21600 -16792)) and (v279==(1 -0))) then if (((4796 -(110 + 714))==(5093 -(963 + 158))) and (v280[3 -2 ]==((0 -0) + 0))) then v230[v277-(1853 -(902 + 950)) ]={v110,v280[572 -(41 + 528) ]};else v230[v277-(1069 -(1006 + (98 -36))) ]={v45,v280[1714 -(1000 + 711) ]};end v109[ #v109 + (1773 -(1227 + 166 + 379)) ]=v230;break;end if (((2460 -1094)<=1384) and (v279==(0 -0))) then v77=v77 + (2 -1) ;v280=v104[v77];v279=1701 -(214 + 1486) ;end end break;end end end v110[v112[1 + 1 ]]=v43(v228,v229,v46);break;end if ((v227==((1862 + 92) -(1736 + 217))) or ((6380 -(1777 + 71))==(12237 -9101))) then local v257=0 + 0 ;while true do if ((v257==(834 -((1183 -784) + 434))) or ((534 + 4186)<(187 -88))) then v227=(1 + 4) -3 ;break;end if (((4252 -3050)>(1566 -577)) and (v257==(0 + 0))) then v230={};v229=v11({},{__index=function(v301,v302)local v315=0 -0 ;local v316;local v317;while true do if ((v315==(647 -(519 + 127))) or (1992>=(11261 -8149))) then while true do if ((v316==0) or ((2467 + 218)>=(2892 + 122))) then local v348=0 + 0 ;while true do if (((0 + 0)==v348) or ((2683 -1255)>(14822 -10223))) then local v351=0 -0 ;while true do if (((7771 -(6847 -3167))<=(6273 -(923 + 338 + 513))) and (v351==0)) then v317=v230[v302];return v317[3 -2 ][v317[1103 -(612 + 489) ]];end end end end end end break;end if ((((5379 -(78 + 172)) -(146 + (1396 -1069)))>((18072 -13915) -(60 + 18))) and (v315==(629 -(260 + 369)))) then local v332=1765 -(1681 + 84) ;while true do if (((8989 -5450)<=(5122 -(382 + 112))) and ((0 + 0)==v332)) then v316=1519 -(210 + 1309) ;v317=nil;v332=1318 -(638 + 679) ;end if ((((2168 -1625) + 3016)>(718 + 66)) and (v332==(551 -((2295 -(101 + 1816)) + 172)))) then v315=1;break;end end end end end,__newindex=function(v301,v302,v303)local v318=785 -(441 + 344) ;local v319;local v320;while true do if ((v318==(0 + 0)) or (((2094 -(173 + 593)) + 2501)<=(11290 -(3543 + 3940)))) then v319=0 + 0 ;v320=nil;v318=(338 + 157) -(95 + 399) ;end if (((1 + 0)==v318) or ((8087 -4598)<(4116 -(342 + 615)))) then while true do if (((2657 -(206 + 80))==(2617 -((791 -(497 + 74)) + 26))) and (v319==(0 -(0 + 0)))) then v320=v230[v302];v320[(6 -2) -3 ][v320[2 + 0 ]]=v303;break;end end break;end end end});v257=2 -1 ;end end end if (((0 + 0)==v227) or ((320 + 117)==(2473 + 1267))) then local v258=0 + 0 ;while true do if ((v258==(886 -(132 + 325 + 429))) or (((4228 + 4676) -5402)>(8180 -(10678 -6030)))) then v228=v105[v112[2 + 1 ]];v229=nil;v258=1545 -(127 + 1417) ;end if (((2796 -(492 + 180))==(3740 -1616)) and (v258==(2 -1))) then v227=(1 -0) + 0 ;break;end end end end end elseif (((1264 + 1683)>(447 + 621)) and (v113<=(54 -(139 -(8 + 109))))) then if (((10429 -7462)>(3005 -1336)) and (v113<=29)) then if ((v113==(83 -55)) or (((2615 + 1653) -(742 + 949))<=((111 + 1812) -((26 -14) + 79)))) then do return;end else v110[v112[2]]=v45[v112[402 -(103 + 251 + (629 -(359 + 225))) ]];end elseif (((5667 -2748)<(2717 + 372)) and (v113<=(44 -14))) then local v202=(0 + 0) -0 ;local v203;while true do if ((v202==(385 -(63 + 322))) or (((2184 + 3723) -(437 + 1296))<(11409 -(26179 -18851)))) then v203=v112[1 + 1 + 0 ];v110[v203](v14(v110,v203 + 1 ,v78));break;end end elseif ((v113>((52 -28) + 7)) or ((1796 + 1794)<=(2021 -1411))) then local v231=374 -(129 + 245) ;local v232;local v233;local v234;while true do if (((547 + 3349)>(1879 -(99 + 476))) and (v231==(4 -(2 + 1)))) then v234=nil;while true do if ((v232==(38 -(20 + 18))) or ((5088 -3279)>(2108 + (3670 -2230)))) then v233=v112[(9 -6) -1 ];v234=v110[v233];v232=1 -0 ;end if (((3497 -(613 + 115))<=(7556 -2914)) and (v232==(1 + 0))) then for v321=v233 + (625 -(95 + 529)) ,v78 do v8(v234,v110[v321]);end break;end end break;end if ((v231==(0 -0)) or ((5599 -1648)>=(5973 -(1165 + 598)))) then v232=651 -((984 -(454 + 378)) + 499) ;v233=nil;v231=2 -1 ;end end else v110[v112[7 -5 ]][v112[3 + 0 ]]=v110[v112[13 -(647 -(238 + 400)) ]];end elseif ((v113<=(602 -(90 + 478))) or ((638 + 2005)<((4590 -(1701 + 160)) -1383))) then if ((v113>(918 -(263 + 622))) or ((2263 + 1411)>(9548 -5802))) then local v204=0 -0 ;local v205;local v206;local v207;while true do if ((v204==(324 -(209 + 114))) or ((2225 -(206 + 378))<=((1890 -1131) + 366))) then v207=nil;while true do if ((((2123 -(1064 + 12)) + 3531)==(1400 + 3178)) and (v205==(0 + 0))) then v206=v112[(3 + 0) -(1 + 0) ];v207=v110[v112[2 + 1 ]];v205=1855 -(1119 + (3229 -2494)) ;end if (((4692 -(862 + 184 + 211))==(3675 -(71 + 169))) and (v205==(3 -2))) then v110[v206 + 1 + 0 ]=v207;v110[v206]=v207[v112[282 -(177 + 86 + 15) ]];break;end end break;end if ((4206>=(9540 -6354)) and (v204==(0 -0))) then v205=0 + 0 ;v206=nil;v204=1 -0 ;end end else do return v110[v112[1 + 1 ]];end end elseif (((140 + 1)<=(3337 -(515 + 685))) and (v113<=(90 -55))) then if (((1601 -(63 + 705))<=((11140 -5718) -(91 + 579))) and v110[v112[2 + 0 ]]) then v77=v77 + 1 + 0 ;else v77=v112[3 + 0 ];end elseif ((v113==((1940 -1218) -(509 + 177))) or ((12483 -7801)<(3687 + 701))) then if (((3219 + 828)>(63 + 1620)) and  not v110[v112[1763 -(82 + 1679) ]]) then v77=v77 + 1 ;else v77=v112[3 + 0 + 0 ];end else local v238=0 -0 ;local v239;local v240;while true do if (((2 -1)==v238) or ((73 -(1931 -(278 + 1633)))>(920 + 2095))) then while true do if ((v239==(715 -(418 + 297))) or (1439>=(4494 -(1208 + 161)))) then v240=v112[3 -1 ];do return v14(v110,v240,v240 + v112[7 -4 ] );end break;end end break;end if (((0 + 0)==v238) or ((11773 -6859)<(1332 + 1280))) then local v259=0 + 0 ;while true do if (((6119 -3231)<=(8223 -5241)) and (v259==(0 + 0))) then v239=0 + 0 ;v240=nil;v259=1 + 0 ;end if ((87<(4620 -(1310 + 612))) and (v259==(1450 -(771 + 678)))) then v238=815 -(507 + 307) ;break;end end end end end v77=v77 + (30 -(18 + 11)) ;break;end end break;end end end end;v76=3;end if (v76==3) then A,B=v41(v12(v81));if  not A[1] then local v117=v44[4][v77] or "?" ;error("Script error at ["   .. v117   .. "]:"   .. A[2] );else return v14(A,2,B);end break;end if (v76==0) then v77=1;v78= -1;v76=1;end if (v76==1) then v79={...};v80=v13("#",...) -1 ;v76=2;end end end;end return v43(v42(),{},v26)(...);end;vv10(),...);break;end end end
