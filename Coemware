--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.5) ~  Much Love, Ferib 

]]--

do
	local v0;
	local v1;
	local v2;
	local v3;
	local v4;
	local v5;
	local v6;
	local v7;
	local v8;
	local v9;
	local v10;
	local v11;
	local v12;
	local v13;
	local v14;
	local v15;
	local v16;
	local v17;
	local v18;
	local v19;
	local v20;
	local v21;
	local v22;
	local v23;
	local v24 = 0;
	while true do
		if (v24 == 0) then
			v0 = string.char;
			v1 = string.byte;
			v2 = string.sub;
			v3 = bit32 or bit;
			v24 = 1;
		end
		if (v24 == 1) then
			v4 = v3.bxor;
			v5 = table.concat;
			v6 = table.insert;
			v7 = nil;
			v24 = 2;
		end
		if (v24 == 2) then
			v7 = function(v31, v32)
				local v35 = 0;
				local v36;
				while true do
					if (1 == v35) then
						return v5(v36);
					end
					if (0 == v35) then
						v36 = {};
						for v51 = 1, #v31 do
							v6(v36, v0(v4(v1(v2(v31, v51, v51 + 1)), v1(v2(v32, 1 + ((v51 - 1) % #v32), 1 + ((v51 - 1) % #v32) + 1))) % 256));
						end
						v35 = 1;
					end
				end
			end;
			v8 = _G[v7("\20\117\55\61\15\221\143\199", "\96\26\89\72\98\191\234\181")];
			v9 = _G[v7("\189\215\251\216\241\202", "\206\163\137\177\159\173")][v7("\241\3\65\45", "\147\122\53\72\171\77\98\140")];
			v10 = _G[v7("\203\207\61\36\214\220", "\184\187\79\77")][v7("\40\46\20\30", "\75\70\117\108\155\142\131\129")];
			v24 = 3;
		end
		if (v24 == 6) then
			v23 = nil;
			v23 = function(v33, v34, ...)
				local v37 = 0;
				local v38;
				local v39;
				local v40;
				local v41;
				local v42;
				local v43;
				local v44;
				local v45;
				local v46;
				local v47;
				local v48;
				local v49;
				local v50;
				while true do
					if (v37 == 4) then
						v50 = nil;
						while true do
							local v52 = 0;
							while true do
								if (v52 == 3) then
									if (v38 == 0) then
										local v53 = 0;
										while true do
											if (0 == v53) then
												v39 = 1768 - (347 + 1420);
												v40 = nil;
												v53 = 1;
											end
											if (1 == v53) then
												v33 = v12(v11(v33, (6 + 0) - (1 - 0)), v7("\84\243", "\122\221\176\75\156\207"), function(v61)
													if (v9(v61, (387 + 371) - (144 + 183 + 3 + 426)) == (1448 - (782 + 587))) then
														local v107 = 0;
														local v108;
														while true do
															if (0 == v107) then
																v108 = 0;
																while true do
																	if (v108 == 0) then
																		local v125 = 0;
																		while true do
																			if (v125 == 0) then
																				v40 = v8(v11(v61, (2 - 1) - 0, 1 + 0));
																				return "";
																			end
																		end
																	end
																end
																break;
															end
														end
													else
														local v109 = 0;
														local v110;
														local v111;
														while true do
															if (v109 == 0) then
																v110 = 0;
																v111 = nil;
																v109 = 1;
															end
															if (v109 == 1) then
																while true do
																	if (v110 == 0) then
																		v111 = v10(v8(v61, 16));
																		if v40 then
																			local v143 = 0;
																			local v144;
																			local v145;
																			while true do
																				if (v143 == 0) then
																					v144 = 0;
																					v145 = nil;
																					v143 = 1;
																				end
																				if (v143 == 1) then
																					while true do
																						local v172 = 0;
																						while true do
																							if (v172 == 0) then
																								if (v144 == 1) then
																									return v145;
																								end
																								if (v144 == 0) then
																									local v177 = 0;
																									while true do
																										if (v177 == 1) then
																											v144 = 1;
																											break;
																										end
																										if (v177 == 0) then
																											v145 = v13(v111, v40);
																											v40 = nil;
																											v177 = 1;
																										end
																									end
																								end
																								break;
																							end
																						end
																					end
																					break;
																				end
																			end
																		else
																			return v111;
																		end
																		break;
																	end
																end
																break;
															end
														end
													end
												end);
												v38 = 1;
												break;
											end
										end
									end
									if (v38 == 5) then
										local v54 = 0;
										while true do
											if (v54 == 0) then
												v47 = v44;
												v48 = nil;
												v54 = 1;
											end
											if (v54 == 1) then
												v48 = function(...)
													return {...}, v20("#", ...);
												end;
												v38 = 6;
												break;
											end
										end
									end
									break;
								end
								if (v52 == 1) then
									if (v38 == 6) then
										local v55 = 0;
										while true do
											if (1 == v55) then
												v50 = nil;
												v38 = 7;
												break;
											end
											if (v55 == 0) then
												v49 = nil;
												v49 = function()
													local v69 = 0;
													local v70;
													local v71;
													local v72;
													local v73;
													local v74;
													local v75;
													local v76;
													while true do
														if (v69 == 2) then
															v74 = nil;
															v75 = nil;
															v69 = 3;
														end
														if (v69 == 0) then
															v70 = 0;
															v71 = nil;
															v69 = 1;
														end
														if (v69 == 1) then
															v72 = nil;
															v73 = nil;
															v69 = 2;
														end
														if (v69 == 3) then
															v76 = nil;
															while true do
																local v118 = 0;
																while true do
																	if (v118 == 0) then
																		if (1 == v70) then
																			local v128 = 0;
																			while true do
																				if (v128 == 0) then
																					v75 = v44();
																					v76 = {};
																					v128 = 1;
																				end
																				if (v128 == 2) then
																					v70 = 2;
																					break;
																				end
																				if (v128 == 1) then
																					for v150 = 4 - 3, v75 do
																						local v151 = 0;
																						local v152;
																						local v153;
																						local v154;
																						while true do
																							if (v151 == 1) then
																								v154 = nil;
																								while true do
																									if (v152 == 0) then
																										local v178 = 0;
																										while true do
																											if (v178 == 1) then
																												v152 = 1;
																												break;
																											end
																											if (v178 == 0) then
																												v153 = v42();
																												v154 = nil;
																												v178 = 1;
																											end
																										end
																									end
																									if (v152 == 1) then
																										if (v153 == ((1 - 0) + (0 - 0))) then
																											v154 = v42() ~= 0;
																										elseif (v153 == (5 - 3)) then
																											v154 = v45();
																										elseif (v153 == ((1630 + 214) - (892 + 207 + 581 + 161))) then
																											v154 = v46();
																										end
																										v76[v150] = v154;
																										break;
																									end
																								end
																								break;
																							end
																							if (v151 == 0) then
																								v152 = 0;
																								v153 = nil;
																								v151 = 1;
																							end
																						end
																					end
																					v74[359 - (353 + 3)] = v42();
																					v128 = 2;
																				end
																			end
																		end
																		if (v70 == 0) then
																			local v129 = 0;
																			while true do
																				if (v129 == 0) then
																					v71 = {};
																					v72 = {};
																					v129 = 1;
																				end
																				if (v129 == 2) then
																					v70 = 1;
																					break;
																				end
																				if (1 == v129) then
																					v73 = {};
																					v74 = {v71,v72,nil,v73};
																					v129 = 2;
																				end
																			end
																		end
																		v118 = 1;
																	end
																	if (v118 == 1) then
																		if (2 == v70) then
																			local v130 = 0;
																			while true do
																				if (v130 == 0) then
																					for v155 = (1779 - 466) - (469 + 843), v44() do
																						local v156 = 0;
																						local v157;
																						local v158;
																						while true do
																							if (1 == v156) then
																								while true do
																									if (v157 == 0) then
																										v158 = v42();
																										if (v41(v158, (939 - (299 + 639)) - 0, (2 - 1) + 0 + 0) == (1291 - (1121 + 170))) then
																											local v183 = 0;
																											local v184;
																											local v185;
																											local v186;
																											local v187;
																											while true do
																												if (2 == v183) then
																													while true do
																														if (v184 == 2) then
																															local v202 = 0;
																															while true do
																																if (v202 == 0) then
																																	if (v41(v186, 1, (5 - 2) - 2) == (1 + 0)) then
																																		v187[2 + 0 + 0] = v76[v187[2]];
																																	end
																																	if (v41(v186, 2, 2 + 0 + 0) == (1 - 0)) then
																																		v187[6 - 3] = v76[v187[(6 - 3) + 0 + 0]];
																																	end
																																	v202 = 1;
																																end
																																if (v202 == 1) then
																																	v184 = 3;
																																	break;
																																end
																															end
																														end
																														if (v184 == 1) then
																															local v203 = 0;
																															while true do
																																if (1 == v203) then
																																	v184 = 2;
																																	break;
																																end
																																if (v203 == 0) then
																																	v187 = {v43(),v43(),nil,nil};
																																	if (v185 == (0 - 0)) then
																																		local v219 = 0;
																																		local v220;
																																		while true do
																																			if (v219 == 0) then
																																				v220 = 0;
																																				while true do
																																					if (0 == v220) then
																																						v187[2 + (298 - (34 + 263))] = v43();
																																						v187[1 + (664 - (265 + 396))] = v43();
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	elseif (v185 == ((8 - 6) - (3 - 2))) then
																																		v187[4 - 1] = v44();
																																	elseif (v185 == (6 - (3 + 1))) then
																																		v187[(4 - 3) + (2 - 0)] = v44() - ((2 + 0) ^ ((1233 - (333 + 898)) + (459 - (78 + 367))));
																																	elseif (v185 == (884 - (812 + 69))) then
																																		local v228 = 0;
																																		local v229;
																																		while true do
																																			if (v228 == 0) then
																																				v229 = 0;
																																				while true do
																																					if (v229 == 0) then
																																						v187[8 - (11 - 6)] = v44() - (2 ^ ((1544 - 933) - (108 + 99 + (1284 - 896))));
																																						v187[1391 - (814 + (2542 - (1918 + 51)))] = v43();
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	end
																																	v203 = 1;
																																end
																															end
																														end
																														if (v184 == 0) then
																															local v204 = 0;
																															while true do
																																if (v204 == 1) then
																																	v184 = 1;
																																	break;
																																end
																																if (v204 == 0) then
																																	v185 = v41(v158, 2, 8 - (54 - (32 + 17)));
																																	v186 = v41(v158, 3 + 1, (2 - 1) + (901 - (851 + 45)));
																																	v204 = 1;
																																end
																															end
																														end
																														if (v184 == 3) then
																															if (v41(v186, 3, (7 + 2) - 6) == ((3 - 2) - (0 + 0))) then
																																v187[(10 + 2) - (6 + 2)] = v76[v187[(8 - 5) + (3 - 2)]];
																															end
																															v71[v155] = v187;
																															break;
																														end
																													end
																													break;
																												end
																												if (v183 == 0) then
																													v184 = 0;
																													v185 = nil;
																													v183 = 1;
																												end
																												if (v183 == 1) then
																													v186 = nil;
																													v187 = nil;
																													v183 = 2;
																												end
																											end
																										end
																										break;
																									end
																								end
																								break;
																							end
																							if (0 == v156) then
																								v157 = 0;
																								v158 = nil;
																								v156 = 1;
																							end
																						end
																					end
																					for v159 = (1255 + 90) - ((1342 - (8 + 29)) + (1172 - (951 + 182))), v44() do
																						v72[v159 - (2 - 1)] = v49();
																					end
																					v130 = 1;
																				end
																				if (1 == v130) then
																					for v161 = (3864 - 1978) - (298 + 871 + 716), v44() do
																						v73[v161] = v44();
																					end
																					return v74;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
													end
												end;
												v55 = 1;
											end
										end
									end
									if (v38 == 2) then
										local v56 = 0;
										while true do
											if (v56 == 1) then
												v43 = function()
													local v77 = 0;
													local v78;
													local v79;
													local v80;
													while true do
														if (1 == v77) then
															v80 = nil;
															while true do
																local v119 = 0;
																while true do
																	if (v119 == 0) then
																		if (v78 == 0) then
																			local v131 = 0;
																			while true do
																				if (v131 == 1) then
																					v78 = 1;
																					break;
																				end
																				if (v131 == 0) then
																					v79, v80 = v9(v33, v39, v39 + 2 + (1963 - (1243 + 720)));
																					v39 = v39 + (((17 - 10) - (2 + 1)) - (1408 - ((908 - (354 + 17)) + 869)));
																					v131 = 1;
																				end
																			end
																		end
																		if (v78 == (1 + 0)) then
																			return (v80 * (998 - 742)) + v79;
																		end
																		break;
																	end
																end
															end
															break;
														end
														if (v77 == 0) then
															v78 = 0;
															v79 = nil;
															v77 = 1;
														end
													end
												end;
												v38 = 3;
												break;
											end
											if (v56 == 0) then
												v42 = function()
													local v81 = 0;
													local v82;
													local v83;
													while true do
														if (v81 == 0) then
															v82 = 0;
															v83 = nil;
															v81 = 1;
														end
														if (v81 == 1) then
															while true do
																local v120 = 0;
																while true do
																	if (v120 == 0) then
																		if (v82 == (3 - 2)) then
																			return v83;
																		end
																		if ((0 + 0) == v82) then
																			local v132 = 0;
																			while true do
																				if (v132 == 1) then
																					v82 = 1;
																					break;
																				end
																				if (v132 == 0) then
																					v83 = v9(v33, v39, v39);
																					v39 = v39 + (2 - (1 + 0)) + (1754 - (1311 + 443));
																					v132 = 1;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
													end
												end;
												v43 = nil;
												v56 = 1;
											end
										end
									end
									v52 = 2;
								end
								if (v52 == 0) then
									if (v38 == 7) then
										local v57 = 0;
										while true do
											if (v57 == 0) then
												v50 = function(v62, v63, v64)
													local v84 = 0;
													local v85;
													local v86;
													local v87;
													local v88;
													while true do
														if (1 == v84) then
															v87 = nil;
															v88 = nil;
															v84 = 2;
														end
														if (v84 == 2) then
															while true do
																local v121 = 0;
																while true do
																	if (v121 == 0) then
																		if (v85 == 0) then
																			local v133 = 0;
																			while true do
																				if (1 == v133) then
																					v85 = 1;
																					break;
																				end
																				if (v133 == 0) then
																					v86 = v62[1 - 0];
																					v87 = v62[(1 + 2) - 1];
																					v133 = 1;
																				end
																			end
																		end
																		if (v85 == 1) then
																			local v134 = 0;
																			while true do
																				if (v134 == 0) then
																					v88 = v62[(7 - 5) + 1];
																					return function(...)
																						local v163 = 0;
																						local v164;
																						local v165;
																						local v166;
																						local v167;
																						local v168;
																						local v169;
																						while true do
																							if (2 == v163) then
																								v168 = nil;
																								v169 = nil;
																								v163 = 3;
																							end
																							if (1 == v163) then
																								v166 = nil;
																								v167 = nil;
																								v163 = 2;
																							end
																							if (0 == v163) then
																								v164 = 0;
																								v165 = nil;
																								v163 = 1;
																							end
																							if (v163 == 3) then
																								while true do
																									if (v164 == 0) then
																										local v180 = 0;
																										while true do
																											if (v180 == 1) then
																												v164 = 1;
																												break;
																											end
																											if (v180 == 0) then
																												v165 = 1 - 0;
																												v166 = -(1 + 0);
																												v180 = 1;
																											end
																										end
																									end
																									if (1 == v164) then
																										local v181 = 0;
																										while true do
																											if (v181 == 0) then
																												v167 = {...};
																												v168 = v20("#", ...) - (2 - (3 - 2));
																												v181 = 1;
																											end
																											if (1 == v181) then
																												v164 = 2;
																												break;
																											end
																										end
																									end
																									if (v164 == 3) then
																										_G['A'], _G['B'] = v48(v19(v169));
																										if not _G['A'][(2 + 1) - (588 - (470 + 116))] then
																											local v188 = 0;
																											local v189;
																											local v190;
																											while true do
																												if (v188 == 0) then
																													v189 = 0;
																													v190 = nil;
																													v188 = 1;
																												end
																												if (v188 == 1) then
																													while true do
																														if (v189 == 0) then
																															v190 = v62[1465 - (1397 + 64)][v165] or "?";
																															error(v7("\194\57\161\181\103\181\23\58\227\40\188\174\55\160\67\127\202", "\145\90\211\220\23\193\55\95") .. v190 .. v7("\236\211", "\177\233\29\184") .. _G['A'][(1 - 0) + 1]);
																															break;
																														end
																													end
																													break;
																												end
																											end
																										else
																											return v21(_G['A'], 4 - (2 + 0), _G['B']);
																										end
																										break;
																									end
																									if (v164 == 2) then
																										local v182 = 0;
																										while true do
																											if (v182 == 0) then
																												v169 = nil;
																												v169 = function()
																													local v191 = 0;
																													local v192;
																													local v193;
																													local v194;
																													local v195;
																													local v196;
																													local v197;
																													local v198;
																													local v199;
																													local v200;
																													local v201;
																													while true do
																														if (v191 == 0) then
																															v192 = v86;
																															v193 = v87;
																															v194 = v88;
																															v195 = v48;
																															v191 = 1;
																														end
																														if (v191 == 2) then
																															v199 = (v168 - v194) + ((2508 - 1705) - (376 + 107 + (696 - 377)));
																															v200 = nil;
																															v201 = nil;
																															while true do
																																local v206 = 0;
																																local v207;
																																while true do
																																	if (0 == v206) then
																																		v207 = 0;
																																		while true do
																																			if (v207 == 1) then
																																				if (v201 <= ((122 + 452) - ((130 - 92) + 504))) then
																																					if (v201 <= 15) then
																																						if (v201 <= 7) then
																																							if (v201 <= (2 + 1 + 0 + 0)) then
																																								if (v201 <= ((358 + 491) - (69 + (1843 - (831 + 233))))) then
																																									if (v201 > (0 - 0)) then
																																										v198[v200[(1030 - (977 + 44)) - (153 - (118 + 28))]] = v198[v200[3]] * v198[v200[16 - 12]];
																																									else
																																										local v233 = 0;
																																										local v234;
																																										local v235;
																																										while true do
																																											if (0 == v233) then
																																												v234 = 0;
																																												v235 = nil;
																																												v233 = 1;
																																											end
																																											if (1 == v233) then
																																												while true do
																																													if (v234 == 0) then
																																														v235 = v200[1498 - (364 + 303 + (1197 - 368))];
																																														v198[v235](v21(v198, v235 + (1 - (1856 - (1093 + 763))), v166));
																																														break;
																																													end
																																												end
																																												break;
																																											end
																																										end
																																									end
																																								elseif (v201 == ((1773 - (461 + 31)) - ((716 - (40 + 31)) + (2374 - (898 + 842))))) then
																																									v198[v200[2 - 0]] = v198[v200[3]] % v198[v200[4]];
																																								else
																																									v198[v200[(27 - 20) - 5]] = v198[v200[2 + 1]] + v198[v200[2 + 2]];
																																								end
																																							elseif (v201 <= (4 + 1)) then
																																								if (v201 == 4) then
																																									if (v200[5 - (1676 - (191 + 1482))] > v198[v200[(1258 - (520 + 736)) + 2 + 0]]) then
																																										v165 = v165 + ((1 + 0) - (0 - 0));
																																									else
																																										v165 = v200[3];
																																									end
																																								else
																																									v198[v200[(3 - 2) + (786 - (408 + 377))]] = v198[v200[(702 + 905) - ((1092 - (36 + 152)) + 662 + 38)]] % v200[4];
																																								end
																																							elseif (v201 > ((3013 - (479 + 1400)) - (888 + (384 - 144)))) then
																																								v198[v200[1 + 1]] = v64[v200[(2 + 8) - (1746 - (1731 + 8))]];
																																							else
																																								local v241 = 0;
																																								local v242;
																																								local v243;
																																								while true do
																																									if (0 == v241) then
																																										v242 = 0;
																																										v243 = nil;
																																										v241 = 1;
																																									end
																																									if (v241 == 1) then
																																										while true do
																																											if (0 == v242) then
																																												v243 = v200[(1555 - (1169 + 383)) - (1 - 0)];
																																												do
																																													return v21(v198, v243, v166);
																																												end
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																								end
																																							end
																																						elseif (v201 <= ((1486 + 151) - ((2026 - (314 + 118)) + (721 - (10 + 679))))) then
																																							if (v201 <= (9 + 0)) then
																																								if (v201 > (1964 - (688 + 1268))) then
																																									v198[v200[(8 - 2) - 4]] = v198[v200[484 - (251 + (747 - 517))]] + v200[(1751 - (1110 + 632)) - (3 + 2)];
																																								else
																																									v198[v200[(785 + 439) - (63 + 1133 + (123 - 97))]]();
																																								end
																																							elseif (v201 == (9 + (1396 - (1054 + 341)))) then
																																								local v245 = 0;
																																								local v246;
																																								local v247;
																																								while true do
																																									if (v245 == 0) then
																																										v246 = 0;
																																										v247 = nil;
																																										v245 = 1;
																																									end
																																									if (v245 == 1) then
																																										while true do
																																											if (v246 == 0) then
																																												v247 = v200[2];
																																												v198[v247](v21(v198, v247 + ((1011 - (188 + 821)) - (1 + 0)), v200[(1144 - 571) - ((292 - 95) + (384 - (6 + 5)))]));
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																								end
																																							else
																																								local v248 = 0;
																																								local v249;
																																								local v250;
																																								local v251;
																																								while true do
																																									if (v248 == 0) then
																																										v249 = 0;
																																										v250 = nil;
																																										v248 = 1;
																																									end
																																									if (v248 == 1) then
																																										v251 = nil;
																																										while true do
																																											if (v249 == 0) then
																																												local v397 = 0;
																																												while true do
																																													if (v397 == 0) then
																																														v250 = v200[(3714 - 1930) - (440 + 319 + 1023)];
																																														v251 = v198[v250];
																																														v397 = 1;
																																													end
																																													if (v397 == 1) then
																																														v249 = 1;
																																														break;
																																													end
																																												end
																																											end
																																											if (1 == v249) then
																																												for v434 = v250 + 1, v166 do
																																													v15(v251, v198[v434]);
																																												end
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																								end
																																							end
																																						elseif (v201 <= (3 + (23 - 13))) then
																																							if (v201 > (36 - 24)) then
																																								v165 = v200[1 + 1 + 1];
																																							else
																																								v63[v200[(5278 - 3745) - (446 + (1400 - (79 + 237)))]] = v198[v200[(3605 - 2284) - (849 + (1114 - (163 + 481)))]];
																																							end
																																						elseif (v201 == (21 - 7)) then
																																							local v255 = 0;
																																							local v256;
																																							local v257;
																																							while true do
																																								if (v255 == 0) then
																																									v256 = 0;
																																									v257 = nil;
																																									v255 = 1;
																																								end
																																								if (v255 == 1) then
																																									while true do
																																										if (v256 == 0) then
																																											v257 = v200[3 - 1];
																																											v198[v257](v198[v257 + (425 - (182 + 242))]);
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						else
																																							local v258 = 0;
																																							local v259;
																																							local v260;
																																							local v261;
																																							local v262;
																																							while true do
																																								if (v258 == 0) then
																																									v259 = 0;
																																									v260 = nil;
																																									v258 = 1;
																																								end
																																								if (v258 == 2) then
																																									while true do
																																										if (v259 == 1) then
																																											v262 = 1472 - (764 + (1989 - (468 + 813)));
																																											for v435 = v260, v200[4] do
																																												local v436 = 0;
																																												local v437;
																																												while true do
																																													if (v436 == 0) then
																																														v437 = 0;
																																														while true do
																																															if (v437 == 0) then
																																																v262 = v262 + (2 - (1 - 0));
																																																v198[v435] = v261[v262];
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											end
																																											break;
																																										end
																																										if (v259 == 0) then
																																											local v399 = 0;
																																											while true do
																																												if (1 == v399) then
																																													v259 = 1;
																																													break;
																																												end
																																												if (0 == v399) then
																																													v260 = v200[1359 - ((1557 - (510 + 293)) + 603)];
																																													v261 = {v198[v260](v21(v198, v260 + (1 - 0), v166))};
																																													v399 = 1;
																																												end
																																											end
																																										end
																																									end
																																									break;
																																								end
																																								if (v258 == 1) then
																																									v261 = nil;
																																									v262 = nil;
																																									v258 = 2;
																																								end
																																							end
																																						end
																																					elseif (v201 <= (6 + 17)) then
																																						if (v201 <= (17 + 2)) then
																																							if (v201 <= ((46 - (30 + 10)) + 11)) then
																																								if (v201 == (497 - (307 + 174))) then
																																									if (v198[v200[1 + 1]] ~= v198[v200[1208 - (254 + 950)]]) then
																																										v165 = v165 + ((2125 - 1031) - (931 + 122 + 40));
																																									else
																																										v165 = v200[(629 + 290) - ((447 - (353 + 18)) + 840)];
																																									end
																																								else
																																									local v263 = 0;
																																									local v264;
																																									local v265;
																																									while true do
																																										if (v263 == 1) then
																																											while true do
																																												if (v264 == 0) then
																																													v265 = v200[2];
																																													v198[v265] = v198[v265](v21(v198, v265 + (3 - 2) + (1557 - (883 + 674)), v200[3]));
																																													break;
																																												end
																																											end
																																											break;
																																										end
																																										if (v263 == 0) then
																																											v264 = 0;
																																											v265 = nil;
																																											v263 = 1;
																																										end
																																									end
																																								end
																																							elseif (v201 > ((712 - (626 + 60)) - (11 - 3))) then
																																								v198[v200[2 + (104 - (71 + 33))]] = v198[v200[(4 + 1) - (8 - 6)]] - v200[4];
																																							else
																																								local v267 = 0;
																																								local v268;
																																								local v269;
																																								while true do
																																									if (v267 == 0) then
																																										v268 = 0;
																																										v269 = nil;
																																										v267 = 1;
																																									end
																																									if (v267 == 1) then
																																										while true do
																																											if (v268 == 0) then
																																												v269 = v200[(16 - 11) - (522 - (286 + 233))];
																																												v198[v269] = v198[v269](v198[v269 + 1]);
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																								end
																																							end
																																						elseif (v201 <= 21) then
																																							if (v201 > (19 + 1)) then
																																								v198[v200[1308 - (939 + 367)]] = v63[v200[(345 - (189 + 146)) - (971 - (79 + 885))]];
																																							else
																																								for v362 = v200[6 - (1941 - (689 + 1248))], v200[1639 - (278 + 1358)] do
																																									v198[v362] = nil;
																																								end
																																							end
																																						elseif (v201 == (736 - (392 + 322))) then
																																							v198[v200[2 + 0 + 0]] = v200[(1 + 2) - 0];
																																						else
																																							v198[v200[2 + 0]][v198[v200[2 + 1]]] = v198[v200[8 - 4]];
																																						end
																																					elseif (v201 <= (11 + 16)) then
																																						if (v201 <= 25) then
																																							if (v201 > (335 - (275 + 36))) then
																																								v198[v200[2 + 0]] = v50(v193[v200[729 - (28 + 698)]], nil, v64);
																																							else
																																								v198[v200[(601 + 1038) - ((3236 - 1707) + 108)]] = not v198[v200[3]];
																																							end
																																						elseif (v201 > ((30 + 50) - (3 + 51))) then
																																							v198[v200[(21 - 15) - (6 - 2)]] = v198[v200[2 + 1]] - v198[v200[(4306 - 3136) - (324 + 62 + 780)]];
																																						else
																																							local v279 = 0;
																																							local v280;
																																							local v281;
																																							local v282;
																																							while true do
																																								if (v279 == 0) then
																																									v280 = 0;
																																									v281 = nil;
																																									v279 = 1;
																																								end
																																								if (1 == v279) then
																																									v282 = nil;
																																									while true do
																																										if (v280 == 0) then
																																											local v404 = 0;
																																											while true do
																																												if (v404 == 1) then
																																													v280 = 1;
																																													break;
																																												end
																																												if (v404 == 0) then
																																													v281 = v200[(1476 - (95 + 1378)) + 0];
																																													v282 = v198[v281];
																																													v404 = 1;
																																												end
																																											end
																																										end
																																										if (v280 == 1) then
																																											for v438 = v281 + (1 - 0), v200[4] do
																																												v282 = v282 .. v198[v438];
																																											end
																																											v198[v200[2 - (0 + 0)]] = v282;
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						end
																																					elseif (v201 <= ((145 - 80) - (136 - 100))) then
																																						if (v201 == 28) then
																																							local v283 = 0;
																																							local v284;
																																							local v285;
																																							while true do
																																								if (v283 == 0) then
																																									v284 = 0;
																																									v285 = nil;
																																									v283 = 1;
																																								end
																																								if (v283 == 1) then
																																									while true do
																																										if (v284 == 0) then
																																											v285 = v200[2];
																																											do
																																												return v198[v285](v21(v198, v285 + 1 + 0 + (1521 - (427 + 1094)), v200[1686 - (436 + 1247)]));
																																											end
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						else
																																							do
																																								return v198[v200[(3 + 0) - (1389 - (202 + 1186))]]();
																																							end
																																						end
																																					elseif (v201 <= ((26 - 15) + 19 + 0)) then
																																						if (v200[1845 - (1308 + 535)] == v198[v200[4]]) then
																																							v165 = v165 + (499 - (413 + 85));
																																						else
																																							v165 = v200[6 - 3];
																																						end
																																					elseif (v201 == ((76 - 54) + 5 + 4)) then
																																						local v367 = 0;
																																						local v368;
																																						local v369;
																																						local v370;
																																						local v371;
																																						while true do
																																							if (v367 == 0) then
																																								v368 = 0;
																																								v369 = nil;
																																								v367 = 1;
																																							end
																																							if (v367 == 2) then
																																								while true do
																																									if (0 == v368) then
																																										local v459 = 0;
																																										while true do
																																											if (v459 == 1) then
																																												v368 = 1;
																																												break;
																																											end
																																											if (v459 == 0) then
																																												v369 = v200[(102 - (93 + 3)) - (11 - 7)];
																																												v370 = v198[v369];
																																												v459 = 1;
																																											end
																																										end
																																									end
																																									if (v368 == 1) then
																																										v371 = v198[v369 + 2];
																																										if (v371 > (0 + 0)) then
																																											if (v370 > v198[v369 + ((1 - 0) - (0 - 0))]) then
																																												v165 = v200[(235 - (110 + 121)) - (1 + 0)];
																																											else
																																												v198[v369 + 2 + 1] = v370;
																																											end
																																										elseif (v370 < v198[v369 + 1]) then
																																											v165 = v200[(8231 - 6428) - ((3674 - 2321) + (841 - 394))];
																																										else
																																											v198[v369 + ((25 - 16) - (483 - (201 + 276)))] = v370;
																																										end
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																							if (v367 == 1) then
																																								v370 = nil;
																																								v371 = nil;
																																								v367 = 2;
																																							end
																																						end
																																					else
																																						local v372 = 0;
																																						local v373;
																																						local v374;
																																						local v375;
																																						local v376;
																																						while true do
																																							if (0 == v372) then
																																								v373 = 0;
																																								v374 = nil;
																																								v372 = 1;
																																							end
																																							if (v372 == 2) then
																																								while true do
																																									if (v373 == 0) then
																																										local v461 = 0;
																																										while true do
																																											if (v461 == 0) then
																																												v374 = v200[3 - (1364 - (675 + 688))];
																																												v375 = v198[v374];
																																												v461 = 1;
																																											end
																																											if (1 == v461) then
																																												v373 = 1;
																																												break;
																																											end
																																										end
																																									end
																																									if (v373 == 1) then
																																										v376 = v200[(3 - 2) + 2 + 0];
																																										for v475 = 310 - (107 + 202), v376 do
																																											v375[v475] = v198[v374 + v475];
																																										end
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																							if (v372 == 1) then
																																								v375 = nil;
																																								v376 = nil;
																																								v372 = 2;
																																							end
																																						end
																																					end
																																				elseif (v201 <= ((1242 - (924 + 280)) + 8 + 3)) then
																																					if (v201 <= 40) then
																																						if (v201 <= ((24 - 6) + (49 - 31))) then
																																							if (v201 <= ((229 - 121) - (250 - 176))) then
																																								if (v201 > 33) then
																																									do
																																										return;
																																									end
																																								else
																																									local v286 = 0;
																																									local v287;
																																									local v288;
																																									local v289;
																																									while true do
																																										if (v286 == 0) then
																																											v287 = 0;
																																											v288 = nil;
																																											v286 = 1;
																																										end
																																										if (v286 == 1) then
																																											v289 = nil;
																																											while true do
																																												if (v287 == 0) then
																																													local v407 = 0;
																																													while true do
																																														if (v407 == 1) then
																																															v287 = 1;
																																															break;
																																														end
																																														if (v407 == 0) then
																																															v288 = v200[(1893 - (839 + 1052)) - (0 - 0)];
																																															v289 = v198[v288];
																																															v407 = 1;
																																														end
																																													end
																																												end
																																												if (v287 == 1) then
																																													for v439 = v288 + (358 - (242 + (1332 - (1076 + 141)))), v200[(1617 - (281 + 1330)) - (247 - (229 + 15))] do
																																														v15(v289, v198[v439]);
																																													end
																																													break;
																																												end
																																											end
																																											break;
																																										end
																																									end
																																								end
																																							elseif (v201 > (850 - (537 + 278))) then
																																								local v290 = 0;
																																								local v291;
																																								local v292;
																																								while true do
																																									if (v290 == 0) then
																																										v291 = 0;
																																										v292 = nil;
																																										v290 = 1;
																																									end
																																									if (v290 == 1) then
																																										while true do
																																											if (v291 == 0) then
																																												v292 = v200[2];
																																												v198[v292] = v198[v292]();
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																								end
																																							elseif (v198[v200[(1873 - (1418 + 453)) + (282 - (90 + 192))]] == v198[v200[(7 - 5) + (4 - 2)]]) then
																																								v165 = v165 + (687 - (274 + 412)) + (704 - (411 + 293));
																																							else
																																								v165 = v200[8 - 5];
																																							end
																																						elseif (v201 <= 38) then
																																							if (v201 == 37) then
																																								v198[v200[(899 + 785) - ((1677 - (577 + 616)) + (1862 - (119 + 545)))]] = v198[v200[4 - 1]][v198[v200[(4464 - 2965) - ((2268 - 1077) + 304)]]];
																																							elseif (v198[v200[2]] ~= v200[(1977 - (599 + 166)) - ((3579 - 2770) + 399)]) then
																																								v165 = v165 + 1;
																																							else
																																								v165 = v200[(112 - (4 + 106)) + (1273 - (365 + 907))];
																																							end
																																						elseif (v201 > ((64 + 44) - (133 - 64))) then
																																							local v295 = 0;
																																							local v296;
																																							local v297;
																																							local v298;
																																							local v299;
																																							local v300;
																																							while true do
																																								if (0 == v295) then
																																									v296 = 0;
																																									v297 = nil;
																																									v295 = 1;
																																								end
																																								if (v295 == 2) then
																																									v300 = nil;
																																									while true do
																																										if (v296 == 1) then
																																											local v410 = 0;
																																											while true do
																																												if (v410 == 1) then
																																													v296 = 2;
																																													break;
																																												end
																																												if (v410 == 0) then
																																													v166 = (v299 + v297) - (1890 - (1401 + 488));
																																													v300 = (0 + 0) - (0 + 0);
																																													v410 = 1;
																																												end
																																											end
																																										end
																																										if (v296 == 0) then
																																											local v411 = 0;
																																											while true do
																																												if (1 == v411) then
																																													v296 = 1;
																																													break;
																																												end
																																												if (v411 == 0) then
																																													v297 = v200[2];
																																													v298, v299 = v195(v198[v297](v21(v198, v297 + (672 - ((669 - 222) + 224)), v200[3])));
																																													v411 = 1;
																																												end
																																											end
																																										end
																																										if (v296 == 2) then
																																											for v440 = v297, v166 do
																																												local v441 = 0;
																																												local v442;
																																												while true do
																																													if (0 == v441) then
																																														v442 = 0;
																																														while true do
																																															if (v442 == 0) then
																																																v300 = v300 + ((1411 - (41 + 272)) - ((189 - 143) + (3079 - 2028)));
																																																v198[v440] = v298[v300];
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											end
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																								if (v295 == 1) then
																																									v298 = nil;
																																									v299 = nil;
																																									v295 = 2;
																																								end
																																							end
																																						else
																																							local v301 = 0;
																																							local v302;
																																							local v303;
																																							local v304;
																																							local v305;
																																							while true do
																																								if (v301 == 2) then
																																									while true do
																																										if (v302 == 0) then
																																											local v412 = 0;
																																											while true do
																																												if (v412 == 0) then
																																													v303 = v200[1 + 1];
																																													v304 = {v198[v303](v21(v198, v303 + (644 - ((212 - 117) + 467 + 81)), v200[2 + 0 + (1691 - (1350 + 340))]))};
																																													v412 = 1;
																																												end
																																												if (v412 == 1) then
																																													v302 = 1;
																																													break;
																																												end
																																											end
																																										end
																																										if (v302 == 1) then
																																											v305 = (0 + 0) - (0 - 0);
																																											for v443 = v303, v200[7 - 3] do
																																												local v444 = 0;
																																												local v445;
																																												while true do
																																													if (v444 == 0) then
																																														v445 = 0;
																																														while true do
																																															if (v445 == 0) then
																																																v305 = v305 + 1 + 0;
																																																v198[v443] = v304[v305];
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											end
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																								if (v301 == 1) then
																																									v304 = nil;
																																									v305 = nil;
																																									v301 = 2;
																																								end
																																								if (v301 == 0) then
																																									v302 = 0;
																																									v303 = nil;
																																									v301 = 1;
																																								end
																																							end
																																						end
																																					elseif (v201 <= (32 + 12)) then
																																						if (v201 <= ((1536 - (345 + 595)) - ((1265 - (126 + 711)) + (585 - 459)))) then
																																							if (v201 == (41 + 0)) then
																																								local v306 = 0;
																																								local v307;
																																								local v308;
																																								local v309;
																																								local v310;
																																								local v311;
																																								local v312;
																																								while true do
																																									if (v306 == 3) then
																																										while true do
																																											if (v307 == 3) then
																																												if v312 then
																																													local v463 = 0;
																																													local v464;
																																													while true do
																																														if (v463 == 0) then
																																															v464 = 0;
																																															while true do
																																																if (v464 == 0) then
																																																	v198[v310] = v312;
																																																	v165 = v200[(8 - 5) - (0 + 0)];
																																																	break;
																																																end
																																															end
																																															break;
																																														end
																																													end
																																												else
																																													v165 = v165 + (1053 - (67 + 609 + 293 + 83));
																																												end
																																												break;
																																											end
																																											if (v307 == 2) then
																																												local v413 = 0;
																																												while true do
																																													if (1 == v413) then
																																														v307 = 3;
																																														break;
																																													end
																																													if (v413 == 0) then
																																														for v500 = 1 - 0, v309 do
																																															v198[v310 + v500] = v311[v500];
																																														end
																																														v312 = v311[(35 + 1522) - ((2371 - (1747 + 42)) + (2072 - 1098))];
																																														v413 = 1;
																																													end
																																												end
																																											end
																																											if (v307 == 1) then
																																												local v414 = 0;
																																												while true do
																																													if (v414 == 0) then
																																														v310 = v308 + (3 - (1461 - (1178 + 282)));
																																														v311 = {v198[v308](v198[v308 + ((3269 - 1628) - (1143 + 497))], v198[v310])};
																																														v414 = 1;
																																													end
																																													if (v414 == 1) then
																																														v307 = 2;
																																														break;
																																													end
																																												end
																																											end
																																											if (v307 == 0) then
																																												local v415 = 0;
																																												while true do
																																													if (v415 == 0) then
																																														v308 = v200[2 + (1647 - (1138 + 509))];
																																														v309 = v200[(587 - 360) - (106 + 20 + (1948 - (957 + 894)))];
																																														v415 = 1;
																																													end
																																													if (v415 == 1) then
																																														v307 = 1;
																																														break;
																																													end
																																												end
																																											end
																																										end
																																										break;
																																									end
																																									if (v306 == 1) then
																																										v309 = nil;
																																										v310 = nil;
																																										v306 = 2;
																																									end
																																									if (0 == v306) then
																																										v307 = 0;
																																										v308 = nil;
																																										v306 = 1;
																																									end
																																									if (2 == v306) then
																																										v311 = nil;
																																										v312 = nil;
																																										v306 = 3;
																																									end
																																								end
																																							elseif not v198[v200[5 - (9 - 6)]] then
																																								v165 = v165 + (1 - 0);
																																							else
																																								v165 = v200[7 - (9 - 5)];
																																							end
																																						elseif (v201 == 43) then
																																							v198[v200[2]] = #v198[v200[3]];
																																						else
																																							v198[v200[5 - 3]] = v198[v200[1 + 2]][v200[4 + 0 + 0]];
																																						end
																																					elseif (v201 <= (11 + 35)) then
																																						if (v201 == 45) then
																																							v198[v200[(2395 - (325 + 73)) - ((1475 - (50 + 526)) + (1736 - (292 + 348)))]] = v198[v200[1279 - (184 + 1092)]];
																																						elseif (v198[v200[(2139 - (549 + 387)) - ((1698 - (1103 + 230)) + 836)]] < v198[v200[19 - 15]]) then
																																							v165 = v165 + (711 - (335 + (1006 - (195 + 436))));
																																						else
																																							v165 = v200[1646 - ((50 - 27) + 1620)];
																																						end
																																					elseif (v201 <= (139 - 92)) then
																																						local v318 = 0;
																																						local v319;
																																						local v320;
																																						local v321;
																																						local v322;
																																						local v323;
																																						while true do
																																							if (0 == v318) then
																																								v319 = 0;
																																								v320 = nil;
																																								v318 = 1;
																																							end
																																							if (v318 == 2) then
																																								v323 = nil;
																																								while true do
																																									if (v319 == 1) then
																																										local v416 = 0;
																																										while true do
																																											if (v416 == 1) then
																																												v319 = 2;
																																												break;
																																											end
																																											if (v416 == 0) then
																																												v166 = (v322 + v320) - (545 - (15 + 529));
																																												v323 = 449 - (73 + 376);
																																												v416 = 1;
																																											end
																																										end
																																									end
																																									if (v319 == 0) then
																																										local v417 = 0;
																																										while true do
																																											if (v417 == 1) then
																																												v319 = 1;
																																												break;
																																											end
																																											if (v417 == 0) then
																																												v320 = v200[4 - 2];
																																												v321, v322 = v195(v198[v320](v21(v198, v320 + (2 - (1 + 0)), v166)));
																																												v417 = 1;
																																											end
																																										end
																																									end
																																									if (v319 == 2) then
																																										for v446 = v320, v166 do
																																											local v447 = 0;
																																											local v448;
																																											while true do
																																												if (v447 == 0) then
																																													v448 = 0;
																																													while true do
																																														if (v448 == 0) then
																																															v323 = v323 + (1 - (0 + 0));
																																															v198[v446] = v321[v323];
																																															break;
																																														end
																																													end
																																													break;
																																												end
																																											end
																																										end
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																							if (v318 == 1) then
																																								v321 = nil;
																																								v322 = nil;
																																								v318 = 2;
																																							end
																																						end
																																					elseif (v201 == ((2944 - (359 + 1031)) - (281 + 47 + (5645 - 4467)))) then
																																						v64[v200[3 - 0]] = v198[v200[1 + 1 + (109 - (84 + 25))]];
																																					else
																																						local v383 = 0;
																																						local v384;
																																						local v385;
																																						local v386;
																																						local v387;
																																						while true do
																																							if (v383 == 2) then
																																								while true do
																																									if (v384 == 2) then
																																										for v486 = 1, v200[957 - ((793 - (127 + 14)) + (699 - (228 + 170)))] do
																																											local v487 = 0;
																																											local v488;
																																											local v489;
																																											while true do
																																												if (v487 == 0) then
																																													v488 = 0;
																																													v489 = nil;
																																													v487 = 1;
																																												end
																																												if (1 == v487) then
																																													while true do
																																														if (v488 == 0) then
																																															local v546 = 0;
																																															while true do
																																																if (v546 == 0) then
																																																	v165 = v165 + ((2154 - 1280) - ((1886 - 1078) + 55 + 10));
																																																	v489 = v192[v165];
																																																	v546 = 1;
																																																end
																																																if (v546 == 1) then
																																																	v488 = 1;
																																																	break;
																																																end
																																															end
																																														end
																																														if (v488 == 1) then
																																															if (v489[(301 + 649) - ((1846 - (219 + 740)) + 21 + 41)] == (1577 - (280 + (2749 - (976 + 521))))) then
																																																v387[v486 - (3 - (2 + 0))] = {v198,v489[12 - (41 - 32)]};
																																															else
																																																v387[v486 - ((2 - 1) + 0 + 0)] = {v63,v489[3]};
																																															end
																																															v197[#v197 + 1] = v387;
																																															break;
																																														end
																																													end
																																													break;
																																												end
																																											end
																																										end
																																										v198[v200[1 + 1]] = v50(v385, v386, v64);
																																										break;
																																									end
																																									if (1 == v384) then
																																										local v466 = 0;
																																										while true do
																																											if (v466 == 1) then
																																												v384 = 2;
																																												break;
																																											end
																																											if (v466 == 0) then
																																												v387 = {};
																																												v386 = v18({}, {[v7("\135\246\236\202\33\189\209", "\216\169\133\164\69")]=function(v511, v512)
																																													local v519 = 0;
																																													local v520;
																																													local v521;
																																													while true do
																																														if (v519 == 1) then
																																															while true do
																																																if (v520 == 0) then
																																																	local v555 = 0;
																																																	while true do
																																																		if (v555 == 0) then
																																																			v521 = v387[v512];
																																																			return v521[1 + 0][v521[(1607 - 1284) - (79 + 227 + 15)]];
																																																		end
																																																	end
																																																end
																																															end
																																															break;
																																														end
																																														if (v519 == 0) then
																																															v520 = 0;
																																															v521 = nil;
																																															v519 = 1;
																																														end
																																													end
																																												end,[v7("\31\207\1\49\55\249\1\48\37\232", "\64\144\111\84")]=function(v511, v512, v513)
																																													local v522 = 0;
																																													local v523;
																																													local v524;
																																													while true do
																																														if (v522 == 1) then
																																															while true do
																																																if (v523 == 0) then
																																																	v524 = v387[v512];
																																																	v524[(1944 - (1231 + 85)) - ((729 - (431 + 245)) + (1106 - (201 + 331)))][v524[8 - 6]] = v513;
																																																	break;
																																																end
																																															end
																																															break;
																																														end
																																														if (v522 == 0) then
																																															v523 = 0;
																																															v524 = nil;
																																															v522 = 1;
																																														end
																																													end
																																												end});
																																												v466 = 1;
																																											end
																																										end
																																									end
																																									if (v384 == 0) then
																																										local v467 = 0;
																																										while true do
																																											if (v467 == 1) then
																																												v384 = 1;
																																												break;
																																											end
																																											if (v467 == 0) then
																																												v385 = v193[v200[8 - 5]];
																																												v386 = nil;
																																												v467 = 1;
																																											end
																																										end
																																									end
																																								end
																																								break;
																																							end
																																							if (v383 == 1) then
																																								v386 = nil;
																																								v387 = nil;
																																								v383 = 2;
																																							end
																																							if (v383 == 0) then
																																								v384 = 0;
																																								v385 = nil;
																																								v383 = 1;
																																							end
																																						end
																																					end
																																				elseif (v201 <= (1972 - (282 + 1633))) then
																																					if (v201 <= (2007 - (444 + 1510))) then
																																						if (v201 <= ((89 - (12 + 5)) - (1634 - (1213 + 400)))) then
																																							if (v201 == (4 + 46)) then
																																								if v198[v200[(2023 - 1467) - (6 + 85 + 463)]] then
																																									v165 = v165 + 1 + (13 - (5 + 8));
																																								else
																																									v165 = v200[(1024 - (343 + 680)) + (5 - 3)];
																																								end
																																							else
																																								local v324 = 0;
																																								local v325;
																																								local v326;
																																								while true do
																																									if (v324 == 0) then
																																										v325 = 0;
																																										v326 = nil;
																																										v324 = 1;
																																									end
																																									if (v324 == 1) then
																																										while true do
																																											if (v325 == 0) then
																																												v326 = v200[(2220 - (54 + 448)) - (1155 + 561)];
																																												do
																																													return v21(v198, v326, v326 + v200[1382 - (1149 + 230)]);
																																												end
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																								end
																																							end
																																						elseif (v201 == (4 + 30 + 9 + 9)) then
																																							do
																																								return v198[v200[1119 - (818 + 299)]];
																																							end
																																						else
																																							v198[v200[(1467 - (769 + 692)) - (1 + 3)]] = v198[v200[(1465 - (464 + 999)) + 1]] * v200[7 - 3];
																																						end
																																					elseif (v201 <= (1462 - (995 + 412))) then
																																						if (v201 == (228 - ((373 - (32 + 315)) + (1588 - (807 + 633))))) then
																																							local v328 = 0;
																																							local v329;
																																							local v330;
																																							local v331;
																																							while true do
																																								if (v328 == 1) then
																																									v331 = nil;
																																									while true do
																																										if (v329 == 0) then
																																											local v419 = 0;
																																											while true do
																																												if (v419 == 1) then
																																													v329 = 1;
																																													break;
																																												end
																																												if (v419 == 0) then
																																													v330 = v200[1 + 0 + (1 - 0)];
																																													v331 = v198[v200[3]];
																																													v419 = 1;
																																												end
																																											end
																																										end
																																										if (v329 == 1) then
																																											v198[v330 + 1 + 0] = v331;
																																											v198[v330] = v331[v198[v200[11 - (1847 - (1343 + 497))]]];
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																								if (v328 == 0) then
																																									v329 = 0;
																																									v330 = nil;
																																									v328 = 1;
																																								end
																																							end
																																						else
																																							v198[v200[(6812 - 5364) - (669 + (2188 - (1003 + 408)))]][v198[v200[7 - 4]]] = v200[10 - 6];
																																						end
																																					elseif (v201 == (1 + 6 + 32 + 17)) then
																																						v198[v200[2]] = {};
																																					else
																																						local v335 = 0;
																																						local v336;
																																						local v337;
																																						local v338;
																																						while true do
																																							if (v335 == 1) then
																																								v338 = nil;
																																								while true do
																																									if (v336 == 1) then
																																										v198[v337 + 1 + 0 + 0 + 0] = v338;
																																										v198[v337] = v338[v200[3 + 1]];
																																										break;
																																									end
																																									if (v336 == 0) then
																																										local v426 = 0;
																																										while true do
																																											if (0 == v426) then
																																												v337 = v200[1 + 0 + (1326 - (896 + 429))];
																																												v338 = v198[v200[8 - (5 + 0)]];
																																												v426 = 1;
																																											end
																																											if (v426 == 1) then
																																												v336 = 1;
																																												break;
																																											end
																																										end
																																									end
																																								end
																																								break;
																																							end
																																							if (v335 == 0) then
																																								v336 = 0;
																																								v337 = nil;
																																								v335 = 1;
																																							end
																																						end
																																					end
																																				elseif (v201 <= ((38 - 9) + 32)) then
																																					if (v201 <= (1917 - (334 + 1524))) then
																																						if (v201 > ((119 + 43) - (308 - (170 + 34)))) then
																																							local v339 = 0;
																																							local v340;
																																							local v341;
																																							local v342;
																																							while true do
																																								if (v339 == 0) then
																																									v340 = 0;
																																									v341 = nil;
																																									v339 = 1;
																																								end
																																								if (v339 == 1) then
																																									v342 = nil;
																																									while true do
																																										if (v340 == 1) then
																																											for v449 = 3 - 2, #v197 do
																																												local v450 = 0;
																																												local v451;
																																												local v452;
																																												while true do
																																													if (v450 == 0) then
																																														v451 = 0;
																																														v452 = nil;
																																														v450 = 1;
																																													end
																																													if (v450 == 1) then
																																														while true do
																																															if (v451 == 0) then
																																																v452 = v197[v449];
																																																for v540 = 0, #v452 do
																																																	local v541 = 0;
																																																	local v542;
																																																	local v543;
																																																	local v544;
																																																	local v545;
																																																	while true do
																																																		if (2 == v541) then
																																																			while true do
																																																				if (v542 == 0) then
																																																					local v558 = 0;
																																																					while true do
																																																						if (v558 == 1) then
																																																							v542 = 1;
																																																							break;
																																																						end
																																																						if (v558 == 0) then
																																																							v543 = v452[v540];
																																																							v544 = v543[1827 - (511 + 1315)];
																																																							v558 = 1;
																																																						end
																																																					end
																																																				end
																																																				if (v542 == 1) then
																																																					v545 = v543[(1 - 0) + 1];
																																																					if ((v544 == v198) and (v545 >= v341)) then
																																																						local v561 = 0;
																																																						local v562;
																																																						while true do
																																																							if (v561 == 0) then
																																																								v562 = 0;
																																																								while true do
																																																									if (v562 == 0) then
																																																										v342[v545] = v544[v545];
																																																										v543[(2 + 2) - (1 + 2)] = v342;
																																																										break;
																																																									end
																																																								end
																																																								break;
																																																							end
																																																						end
																																																					end
																																																					break;
																																																				end
																																																			end
																																																			break;
																																																		end
																																																		if (v541 == 0) then
																																																			v542 = 0;
																																																			v543 = nil;
																																																			v541 = 1;
																																																		end
																																																		if (1 == v541) then
																																																			v544 = nil;
																																																			v545 = nil;
																																																			v541 = 2;
																																																		end
																																																	end
																																																end
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											end
																																											break;
																																										end
																																										if (v340 == 0) then
																																											local v427 = 0;
																																											while true do
																																												if (1 == v427) then
																																													v340 = 1;
																																													break;
																																												end
																																												if (v427 == 0) then
																																													v341 = v200[1 + 1 + 0];
																																													v342 = {};
																																													v427 = 1;
																																												end
																																											end
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						else
																																							local v343 = 0;
																																							local v344;
																																							while true do
																																								if (v343 == 0) then
																																									v344 = 0;
																																									while true do
																																										if (v344 == 0) then
																																											v198[v200[728 - (49 + 677)]] = v200[(1 + 3) - 1] ~= (0 + 0);
																																											v165 = v165 + ((215 - 153) - (10 + 40 + (754 - (92 + 651))));
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						end
																																					elseif (v201 > ((1089 - 423) - (168 + 438))) then
																																						local v345 = 0;
																																						local v346;
																																						local v347;
																																						local v348;
																																						local v349;
																																						while true do
																																							if (1 == v345) then
																																								v348 = nil;
																																								v349 = nil;
																																								v345 = 2;
																																							end
																																							if (v345 == 2) then
																																								while true do
																																									if (1 == v346) then
																																										local v429 = 0;
																																										while true do
																																											if (v429 == 1) then
																																												v346 = 2;
																																												break;
																																											end
																																											if (v429 == 0) then
																																												v349 = v198[v347] + v348;
																																												v198[v347] = v349;
																																												v429 = 1;
																																											end
																																										end
																																									end
																																									if (v346 == 2) then
																																										if (v348 > (639 - (123 + 129 + (1374 - (328 + 659))))) then
																																											if (v349 <= v198[v347 + 1]) then
																																												local v503 = 0;
																																												local v504;
																																												while true do
																																													if (v503 == 0) then
																																														v504 = 0;
																																														while true do
																																															if (v504 == 0) then
																																																v165 = v200[1 + 2];
																																																v198[v347 + ((10 - 6) - (1 + 0))] = v349;
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											end
																																										elseif (v349 >= v198[v347 + 1]) then
																																											local v505 = 0;
																																											local v506;
																																											while true do
																																												if (v505 == 0) then
																																													v506 = 0;
																																													while true do
																																														if (v506 == 0) then
																																															v165 = v200[(1 + 7) - 5];
																																															v198[v347 + 3] = v349;
																																															break;
																																														end
																																													end
																																													break;
																																												end
																																											end
																																										end
																																										break;
																																									end
																																									if (v346 == 0) then
																																										local v430 = 0;
																																										while true do
																																											if (v430 == 1) then
																																												v346 = 1;
																																												break;
																																											end
																																											if (v430 == 0) then
																																												v347 = v200[1 + 1];
																																												v348 = v198[v347 + (835 - (572 + 261))];
																																												v430 = 1;
																																											end
																																										end
																																									end
																																								end
																																								break;
																																							end
																																							if (v345 == 0) then
																																								v346 = 0;
																																								v347 = nil;
																																								v345 = 1;
																																							end
																																						end
																																					else
																																						v198[v200[595 - (157 + 436)]] = v200[3] + v198[v200[4 - 0]];
																																					end
																																				elseif (v201 <= ((447 - 268) - 116)) then
																																					if (v201 > ((847 + 829) - ((2522 - (57 + 1376)) + (1643 - (340 + 778))))) then
																																						local v351 = 0;
																																						local v352;
																																						local v353;
																																						local v354;
																																						local v355;
																																						local v356;
																																						while true do
																																							if (v351 == 1) then
																																								v354 = nil;
																																								v355 = nil;
																																								v351 = 2;
																																							end
																																							if (2 == v351) then
																																								v356 = nil;
																																								while true do
																																									if (v352 == 1) then
																																										local v431 = 0;
																																										while true do
																																											if (v431 == 1) then
																																												v352 = 2;
																																												break;
																																											end
																																											if (v431 == 0) then
																																												v166 = (v355 + v353) - 1;
																																												v356 = (982 - (4 + 48)) - (349 + 525 + (348 - (256 + 36)));
																																												v431 = 1;
																																											end
																																										end
																																									end
																																									if (v352 == 0) then
																																										local v432 = 0;
																																										while true do
																																											if (v432 == 1) then
																																												v352 = 1;
																																												break;
																																											end
																																											if (v432 == 0) then
																																												v353 = v200[2 + 0];
																																												v354, v355 = v195(v198[v353](v198[v353 + 1 + (0 - 0)]));
																																												v432 = 1;
																																											end
																																										end
																																									end
																																									if (v352 == 2) then
																																										for v453 = v353, v166 do
																																											local v454 = 0;
																																											local v455;
																																											while true do
																																												if (v454 == 0) then
																																													v455 = 0;
																																													while true do
																																														if (v455 == 0) then
																																															v356 = v356 + 1 + (0 - 0);
																																															v198[v453] = v354[v356];
																																															break;
																																														end
																																													end
																																													break;
																																												end
																																											end
																																										end
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																							if (v351 == 0) then
																																								v352 = 0;
																																								v353 = nil;
																																								v351 = 1;
																																							end
																																						end
																																					else
																																						local v357 = 0;
																																						local v358;
																																						local v359;
																																						local v360;
																																						local v361;
																																						while true do
																																							if (v357 == 2) then
																																								while true do
																																									if (v358 == 1) then
																																										v361 = 849 - (631 + 218);
																																										for v456 = v359, v200[(108 - (106 + 1)) + (1278 - (306 + 969))] do
																																											local v457 = 0;
																																											local v458;
																																											while true do
																																												if (v457 == 0) then
																																													v458 = 0;
																																													while true do
																																														if (v458 == 0) then
																																															v361 = v361 + 1;
																																															v198[v456] = v360[v361];
																																															break;
																																														end
																																													end
																																													break;
																																												end
																																											end
																																										end
																																										break;
																																									end
																																									if (0 == v358) then
																																										local v433 = 0;
																																										while true do
																																											if (v433 == 1) then
																																												v358 = 1;
																																												break;
																																											end
																																											if (v433 == 0) then
																																												v359 = v200[2];
																																												v360 = {v198[v359](v198[v359 + (629 - (225 + 403))])};
																																												v433 = 1;
																																											end
																																										end
																																									end
																																								end
																																								break;
																																							end
																																							if (v357 == 0) then
																																								v358 = 0;
																																								v359 = nil;
																																								v357 = 1;
																																							end
																																							if (v357 == 1) then
																																								v360 = nil;
																																								v361 = nil;
																																								v357 = 2;
																																							end
																																						end
																																					end
																																				elseif (v201 <= (38 + 26)) then
																																					if (v198[v200[8 - (29 - 23)]] == v200[1 + 3]) then
																																						v165 = v165 + ((12 - 9) - (35 - (7 + 26)));
																																					else
																																						v165 = v200[(4 + 1) - (769 - (440 + 327))];
																																					end
																																				elseif (v201 == (468 - (263 + (1178 - (559 + 479))))) then
																																					local v390 = 0;
																																					local v391;
																																					local v392;
																																					while true do
																																						if (v390 == 1) then
																																							while true do
																																								if (v391 == 0) then
																																									v392 = v200[(2905 - 1130) - ((4914 - 3823) + 682)];
																																									v198[v392] = v198[v392](v21(v198, v392 + ((1336 - (166 + 1169)) - (0 + 0)), v166));
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																						if (v390 == 0) then
																																							v391 = 0;
																																							v392 = nil;
																																							v390 = 1;
																																						end
																																					end
																																				else
																																					v198[v200[7 - (12 - 7)]] = v200[(3 + 3) - (3 - 0)] ~= (0 + 0 + (386 - (300 + 86)));
																																				end
																																				v165 = v165 + 1;
																																				break;
																																			end
																																			if (v207 == 0) then
																																				local v221 = 0;
																																				while true do
																																					if (v221 == 0) then
																																						v200 = v192[v165];
																																						v201 = v200[(2 - 1) + (1242 - (1122 + 120))];
																																						v221 = 1;
																																					end
																																					if (v221 == 1) then
																																						v207 = 1;
																																						break;
																																					end
																																				end
																																			end
																																		end
																																		break;
																																	end
																																end
																															end
																															break;
																														end
																														if (v191 == 1) then
																															v196 = {};
																															v197 = {};
																															v198 = {};
																															for v208 = 0 + 0, v168 do
																																if (v208 >= v194) then
																																	v196[v208 - v194] = v167[v208 + ((821 - (55 + 23)) - ((1043 - 533) + 232))];
																																else
																																	v198[v208] = v167[v208 + (1794 - (649 + 21 + 417 + 706))];
																																end
																															end
																															v191 = 2;
																														end
																													end
																												end;
																												v182 = 1;
																											end
																											if (v182 == 1) then
																												v164 = 3;
																												break;
																											end
																										end
																									end
																								end
																								break;
																							end
																						end
																					end;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
														if (v84 == 0) then
															v85 = 0;
															v86 = nil;
															v84 = 1;
														end
													end
												end;
												return v50(v49(), {}, v34)(...);
											end
										end
									end
									if (v38 == 4) then
										local v58 = 0;
										while true do
											if (v58 == 0) then
												v45 = function()
													local v89 = 0;
													local v90;
													local v91;
													local v92;
													local v93;
													local v94;
													local v95;
													local v96;
													while true do
														if (1 == v89) then
															v92 = nil;
															v93 = nil;
															v89 = 2;
														end
														if (v89 == 3) then
															v96 = nil;
															while true do
																local v122 = 0;
																while true do
																	if (v122 == 0) then
																		if (v90 == 3) then
																			local v135 = 0;
																			while true do
																				if (v135 == 0) then
																					if (v95 == (352 - (164 + 188))) then
																						if (v94 == (((0 + 0) - (0 - 0)) + ((285 - (173 + 112)) - 0))) then
																							return v96 * (0 - 0);
																						else
																							local v175 = 0;
																							local v176;
																							while true do
																								if (v175 == 0) then
																									v176 = 0;
																									while true do
																										if (v176 == (0 - 0)) then
																											v95 = 4 - 3;
																											v93 = 0 + (1747 - (1490 + 257));
																											break;
																										end
																									end
																									break;
																								end
																							end
																						end
																					elseif (v95 == (3656 - (523 + 916 + (1888 - (399 + 1319))))) then
																						return ((v94 == (((2981 - (119 + 33)) - (103 + 390 + 839)) - (((380 + 572) - 567) + (2758 - ((916 - 352) + 1082))))) and (v96 * (((4 - 1) - 2) / (((967 - (862 + 105)) + 0) - ((1753 - (148 + 18)) - (71 + 69 + (5910 - 4463))))))) or (v96 * NaN);
																					end
																					return v16(v96, v95 - (((14853 - 10527) - (1362 + 981)) - (3165 - (3212 - (720 + 287))))) * (v93 + (v94 / (2 ^ (2 + 2 + 6 + 1 + (62 - 24) + 3))));
																				end
																			end
																		end
																		if (v90 == (1 + 1)) then
																			local v136 = 0;
																			while true do
																				if (v136 == 0) then
																					v95 = v41(v92, 5 + 16, 29 + 2);
																					v96 = ((v41(v92, 868 - (708 + (527 - (163 + 236)))) == ((1236 - (21 + 1213)) - (2 - 1))) and -(3 - (1524 - (524 + (2866 - (1763 + 105)))))) or (((331 + 34) - (261 + 103)) - ((0 - 0) - 0));
																					v136 = 1;
																				end
																				if (v136 == 1) then
																					v90 = 3;
																					break;
																				end
																			end
																		end
																		v122 = 1;
																	end
																	if (v122 == 1) then
																		if (v90 == (979 - (193 + 785))) then
																			local v137 = 0;
																			while true do
																				if (0 == v137) then
																					v93 = ((614 + 910) - (1002 - (9 + 239))) - ((819 - (375 + 287)) + ((1325 - 515) - (131 + 67)));
																					v94 = (v41(v92, 1014 - ((2541 - ((554 - (192 + 25)) + 942 + 377)) + 69 + 47 + 12), 10 + 10) * (((3 + (1970 - (1255 + 711))) - 5) ^ ((475 - (154 + 41 + (604 - 443))) - 87))) + v91;
																					v137 = 1;
																				end
																				if (v137 == 1) then
																					v90 = 2;
																					break;
																				end
																			end
																		end
																		if (v90 == 0) then
																			local v138 = 0;
																			while true do
																				if (v138 == 0) then
																					v91 = v44();
																					v92 = v44();
																					v138 = 1;
																				end
																				if (v138 == 1) then
																					v90 = 1575 - (1514 + 60);
																					break;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
														if (v89 == 2) then
															v94 = nil;
															v95 = nil;
															v89 = 3;
														end
														if (0 == v89) then
															v90 = 0;
															v91 = nil;
															v89 = 1;
														end
													end
												end;
												v46 = nil;
												v58 = 1;
											end
											if (1 == v58) then
												v46 = function(v65)
													local v97 = 0;
													local v98;
													local v99;
													local v100;
													while true do
														if (0 == v97) then
															v98 = 0;
															v99 = nil;
															v97 = 1;
														end
														if (v97 == 1) then
															v100 = nil;
															while true do
																local v123 = 0;
																while true do
																	if (v123 == 0) then
																		if (v98 == (2 - 1)) then
																			local v139 = 0;
																			while true do
																				if (v139 == 0) then
																					v99 = v11(v33, v39, (v39 + v65) - ((359 - (155 + 203)) + 0));
																					v39 = v39 + v65;
																					v139 = 1;
																				end
																				if (v139 == 1) then
																					v98 = 2;
																					break;
																				end
																			end
																		end
																		if (v98 == (832 - (77 + 753))) then
																			local v140 = 0;
																			while true do
																				if (v140 == 0) then
																					v100 = {};
																					for v170 = (2 + 0) - 1, #v99 do
																						v100[v170] = v10(v9(v11(v99, v170, v170)));
																					end
																					v140 = 1;
																				end
																				if (v140 == 1) then
																					v98 = 3;
																					break;
																				end
																			end
																		end
																		v123 = 1;
																	end
																	if (v123 == 1) then
																		if (v98 == 0) then
																			local v141 = 0;
																			while true do
																				if (v141 == 0) then
																					v99 = nil;
																					if not v65 then
																						local v173 = 0;
																						local v174;
																						while true do
																							if (v173 == 0) then
																								v174 = 0 + 0;
																								while true do
																									if (v174 == (1978 - (33 + 1945))) then
																										v65 = v44();
																										if (v65 == (711 - (526 + 185))) then
																											return "";
																										end
																										break;
																									end
																								end
																								break;
																							end
																						end
																					end
																					v141 = 1;
																				end
																				if (v141 == 1) then
																					v98 = 1;
																					break;
																				end
																			end
																		end
																		if ((10 - 7) == v98) then
																			return v14(v100);
																		end
																		break;
																	end
																end
															end
															break;
														end
													end
												end;
												v38 = 5;
												break;
											end
										end
									end
									v52 = 1;
								end
								if (v52 == 2) then
									if (v38 == 3) then
										local v59 = 0;
										while true do
											if (v59 == 1) then
												v45 = nil;
												v38 = 4;
												break;
											end
											if (v59 == 0) then
												v44 = nil;
												v44 = function()
													local v101 = 0;
													local v102;
													local v103;
													local v104;
													local v105;
													local v106;
													while true do
														if (v101 == 2) then
															v106 = nil;
															while true do
																local v124 = 0;
																while true do
																	if (v124 == 0) then
																		if (v102 == 1) then
																			return (v106 * (((42528234 - 33027006) - ((1482 - 376) + (2430 - (861 + 808)))) + (7278925 - (51 + (2713 - (475 + 1219)))))) + (v105 * (((152529 - 84618) - ((2491 - (452 + 1388)) + 56)) - ((2418 - (655 + 900)) + (2251 - 1446)))) + (v104 * ((1729 - 505) - (1992 - 1024))) + v103;
																		end
																		if (v102 == 0) then
																			local v142 = 0;
																			while true do
																				if (v142 == 0) then
																					v103, v104, v105, v106 = v9(v33, v39, v39 + ((3 + 11) - 11));
																					v39 = v39 + (((2085 + 2807) - (2850 + 347)) - (((1855 - (134 + 78)) - (201 + (2112 - 1341))) + ((4094 - (11 + 1632)) - (969 + 462))));
																					v142 = 1;
																				end
																				if (v142 == 1) then
																					v102 = 1;
																					break;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
														if (v101 == 0) then
															v102 = 0;
															v103 = nil;
															v101 = 1;
														end
														if (v101 == 1) then
															v104 = nil;
															v105 = nil;
															v101 = 2;
														end
													end
												end;
												v59 = 1;
											end
										end
									end
									if (v38 == 1) then
										local v60 = 0;
										while true do
											if (v60 == 0) then
												v41 = nil;
												v41 = function(v66, v67, v68)
													if v68 then
														local v112 = 0;
														local v113;
														local v114;
														while true do
															if (v112 == 1) then
																while true do
																	if (0 == v113) then
																		local v126 = 0;
																		while true do
																			if (v126 == 0) then
																				v114 = (v66 / ((((5856 - 4572) - (719 + 350 + 214)) + 1 + 0 + 0) ^ (v67 - 1))) % (((5 - 3) + 0) ^ (((v68 - (2 - 1)) - (v67 - ((1228 - (1917 - 1214)) - (((3117 - (1248 + 58)) - ((2346 - 1324) + (1775 - (72 + 1121)))) + 73 + 244)))) + (920 - (503 + 416))));
																				return v114 - (v114 % (1 + 0 + (0 - 0)));
																			end
																		end
																	end
																end
																break;
															end
															if (v112 == 0) then
																v113 = 974 - (699 + 275);
																v114 = nil;
																v112 = 1;
															end
														end
													else
														local v115 = 0;
														local v116;
														local v117;
														while true do
															if (v115 == 0) then
																v116 = 251 - (19 + 232);
																v117 = nil;
																v115 = 1;
															end
															if (1 == v115) then
																while true do
																	if (v116 == 0) then
																		local v127 = 0;
																		while true do
																			if (v127 == 0) then
																				v117 = (1 + 0 + (805 - ((121 - 88) + (1137 - (114 + 252))))) ^ (v67 - ((1450 - (1113 + 336)) + 0));
																				return (((v66 % (v117 + v117)) >= v117) and (2 - 1)) or (0 - (1940 - (1750 + 190)));
																			end
																		end
																	end
																end
																break;
															end
														end
													end
												end;
												v60 = 1;
											end
											if (v60 == 1) then
												v42 = nil;
												v38 = 2;
												break;
											end
										end
									end
									v52 = 3;
								end
							end
						end
						break;
					end
					if (v37 == 3) then
						v47 = nil;
						v48 = nil;
						v49 = nil;
						v37 = 4;
					end
					if (v37 == 2) then
						v44 = nil;
						v45 = nil;
						v46 = nil;
						v37 = 3;
					end
					if (v37 == 0) then
						v38 = 0;
						v39 = nil;
						v40 = nil;
						v37 = 1;
					end
					if (v37 == 1) then
						v41 = nil;
						v42 = nil;
						v43 = nil;
						v37 = 2;
					end
				end
			end;
			vv17(), ...);
			break;
		end
		if (v24 == 4) then
			v15 = _G[v7("\88\203\223\192\255", "\44\170\189\172\154")][v7("\75\164\176\166\26\170", "\34\202\195\195\104\222\197\79")];
			v16 = _G[v7("\191\236\228\243", "\210\141\144\155")][v7("\68\141\237\44\233", "\40\233\136\84\153\199\232\206")];
			v17 = _G[v7("\238\249\241\88\38\247\157", "\137\156\133\62\67\153\235")] or function()
				return _ENV;
			end;
			v18 = _G[v7("\61\141\255\117\190\17\47\156\234\122\183\0", "\78\232\139\24\219\101")];
			v24 = 5;
		end
		if (5 == v24) then
			v19 = _G[v7("\236\113\44\53\201", "\156\18\77\89\165\173\224\121")];
			v20 = _G[v7("\107\125\217\32\11\8", "\24\24\181\69\104\124\64")];
			v21 = _G[v7("\153\135\206\62\194\79", "\236\233\190\95\161\36")] or _G[v7("\207\129\137\31\134", "\187\224\235\115\227\196")][v7("\195\137\187\224\229\5", "\182\231\203\129\134\110\139\20")];
			v22 = _G[v7("\150\187\88\56\160\5\83\144", "\226\212\54\77\205\103\54")];
			v24 = 6;
		end
		if (v24 == 3) then
			v11 = _G[v7("\96\46\75\21\53\56", "\19\90\57\124\91\95")][v7("\76\207\218", "\63\186\184\40")];
			v12 = _G[v7("\149\191\234\71\3\133", "\230\203\152\46\109\226")][v7("\207\247\173\32", "\168\132\216\66\184")];
			v13 = _G[v7("\78\198\186\75\117\90", "\61\178\200\34\27")][v7("\29\242\49", "\111\151\65\221\44\46")];
			v14 = _G[v7("\29\202\174\113\12", "\105\171\204\29")][v7("\245\66\225\62\95\170", "\150\45\143\93\62\222\37\18")];
			v24 = 4;
		end
	end
end
