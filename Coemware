--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.5) ~  Much Love, Ferib 

]]--

do
	local v0;
	local v1;
	local v2;
	local v3;
	local v4;
	local v5;
	local v6;
	local v7;
	local v8;
	local v9;
	local v10;
	local v11;
	local v12;
	local v13;
	local v14;
	local v15;
	local v16;
	local v17;
	local v18;
	local v19;
	local v20;
	local v21;
	local v22;
	local v23;
	local v24 = 0;
	while true do
		if (v24 == 2) then
			v6 = table.insert;
			v7 = nil;
			v7 = function(v26, v27)
				local v35 = 0;
				local v36;
				while true do
					if (v35 == 0) then
						v36 = {};
						for v51 = 1, #v26 do
							v6(v36, v0(v4(v1(v2(v26, v51, v51 + 1)), v1(v2(v27, 1 + ((v51 - 1) % #v27), 1 + ((v51 - 1) % #v27) + 1))) % 256));
						end
						v35 = 1;
					end
					if (v35 == 1) then
						return v5(v36);
					end
				end
			end;
			v24 = 3;
		end
		if (v24 == 3) then
			v8 = _G[v7("\250\225\61\215\6\95\236\222", "\142\142\83\162\107\61\137\172")];
			v9 = _G[v7("\203\42\209\180\65\234", "\184\94\163\221\47\141\101")][v7("\137\187\40\91", "\235\194\92\62\26\45\81")];
			v10 = _G[v7("\168\251\170\89\164\233", "\219\143\216\48\202\142\215")][v7("\94\21\73\229", "\61\125\40\151\153\200")];
			v24 = 4;
		end
		if (v24 == 6) then
			v17 = _G[v7("\202\184\244\13\43\89\234", "\173\221\128\107\78\55\156\26")] or function()
				return _ENV;
			end;
			v18 = _G[v7("\189\166\27\248\233\96\9\13\175\161\3\240", "\206\195\111\149\140\20\104\121")];
			v19 = _G[v7("\104\113\46\199\116", "\24\18\79\171")];
			v24 = 7;
		end
		if (4 == v24) then
			v11 = _G[v7("\222\166\70\47\161\60", "\173\210\52\70\207\91")][v7("\214\201\168", "\165\188\202\74\177\197\171")];
			v12 = _G[v7("\44\210\255\183\236\95", "\95\166\141\222\130\56\145")][v7("\2\220\242\115", "\101\175\135\17\161\225")];
			v13 = _G[v7("\244\192\239\136\70\250", "\135\180\157\225\40\157\214\55")][v7("\14\219\229", "\124\190\149\77\186")];
			v24 = 5;
		end
		if (7 == v24) then
			v20 = _G[v7("\185\66\8\202\47\35", "\202\39\100\175\76\87")];
			v21 = _G[v7("\237\15\2\35\136\67", "\152\97\114\66\235\40\194")] or _G[v7("\9\82\68\165\251", "\125\51\38\201\158\236")][v7("\164\224\81\4\220\186", "\209\142\33\101\191")];
			v22 = _G[v7("\70\121\68\196\211\19\87\100", "\50\22\42\177\190\113")];
			v24 = 8;
		end
		if (v24 == 1) then
			v3 = bit32 or bit;
			v4 = v3.bxor;
			v5 = table.concat;
			v24 = 2;
		end
		if (5 == v24) then
			v14 = _G[v7("\255\58\171\124\8", "\139\91\201\16\109")][v7("\57\243\11\29\228\46", "\90\156\101\126\133")];
			v15 = _G[v7("\96\78\70\143\162", "\20\47\36\227\199\117")][v7("\235\241\146\209\236\149", "\130\159\225\180\158\225\154\128")];
			v16 = _G[v7("\227\213\145\245", "\142\180\229\157")][v7("\173\232\128\241\64", "\193\140\229\137\48\84")];
			v24 = 6;
		end
		if (v24 == 8) then
			v23 = nil;
			v23 = function(v30, v31, ...)
				local v37 = 0;
				local v38;
				local v39;
				local v40;
				local v41;
				local v42;
				local v43;
				local v44;
				local v45;
				local v46;
				local v47;
				local v48;
				local v49;
				local v50;
				while true do
					if (v37 == 3) then
						v47 = nil;
						v48 = nil;
						v49 = nil;
						v37 = 4;
					end
					if (v37 == 2) then
						v44 = nil;
						v45 = nil;
						v46 = nil;
						v37 = 3;
					end
					if (v37 == 4) then
						v50 = nil;
						while true do
							local v52 = 0;
							while true do
								if (v52 == 1) then
									if (v38 == 7) then
										local v53 = 0;
										while true do
											if (v53 == 0) then
												v50 = function(v61, v62, v63)
													local v69 = 0;
													local v70;
													local v71;
													local v72;
													local v73;
													while true do
														if (v69 == 2) then
															while true do
																local v118 = 0;
																while true do
																	if (0 == v118) then
																		if (v70 == 0) then
																			local v128 = 0;
																			while true do
																				if (v128 == 1) then
																					v70 = 1;
																					break;
																				end
																				if (v128 == 0) then
																					v71 = v61[1];
																					v72 = v61[5 - 3];
																					v128 = 1;
																				end
																			end
																		end
																		if (v70 == 1) then
																			local v129 = 0;
																			while true do
																				if (v129 == 0) then
																					v73 = v61[(11 - 4) - 4];
																					return function(...)
																						local v150 = 0;
																						local v151;
																						local v152;
																						local v153;
																						local v154;
																						local v155;
																						local v156;
																						while true do
																							if (v150 == 1) then
																								v153 = nil;
																								v154 = nil;
																								v150 = 2;
																							end
																							if (v150 == 3) then
																								while true do
																									if (v151 == 1) then
																										local v177 = 0;
																										while true do
																											if (v177 == 0) then
																												v154 = {...};
																												v155 = v20("#", ...) - 1;
																												v177 = 1;
																											end
																											if (v177 == 1) then
																												v151 = 2;
																												break;
																											end
																										end
																									end
																									if (v151 == 3) then
																										_G['A'], _G['B'] = v48(v19(v156));
																										if not _G['A'][729 - (256 + 472)] then
																											local v183 = 0;
																											local v184;
																											local v185;
																											while true do
																												if (v183 == 1) then
																													while true do
																														if (v184 == 0) then
																															v185 = v61[(4 + 2) - (8 - 6)][v152] or "?";
																															error(v7("\33\198\54\239\48\6\133\33\244\50\29\215\100\231\52\82\254", "\114\165\68\134\64") .. v185 .. v7("\19\240", "\78\202\199\206\56") .. _G['A'][1471 - (1173 + (2210 - (355 + 1559)))]);
																															break;
																														end
																													end
																													break;
																												end
																												if (v183 == 0) then
																													v184 = 0;
																													v185 = nil;
																													v183 = 1;
																												end
																											end
																										else
																											return v21(_G['A'], 2, _G['B']);
																										end
																										break;
																									end
																									if (v151 == 0) then
																										local v178 = 0;
																										while true do
																											if (1 == v178) then
																												v151 = 1;
																												break;
																											end
																											if (v178 == 0) then
																												v152 = 1 + 0 + 0;
																												v153 = -1;
																												v178 = 1;
																											end
																										end
																									end
																									if (2 == v151) then
																										local v179 = 0;
																										while true do
																											if (v179 == 0) then
																												v156 = nil;
																												v156 = function()
																													local v191 = 0;
																													local v192;
																													local v193;
																													local v194;
																													local v195;
																													local v196;
																													local v197;
																													local v198;
																													local v199;
																													local v200;
																													local v201;
																													while true do
																														if (v191 == 2) then
																															v199 = (v155 - v194) + 1;
																															v200 = nil;
																															v201 = nil;
																															while true do
																																local v202 = 0;
																																local v203;
																																while true do
																																	if (v202 == 0) then
																																		v203 = 0;
																																		while true do
																																			if (v203 == 1) then
																																				if (v201 <= 32) then
																																					if (v201 <= 15) then
																																						if (v201 <= (197 - (44 + 146))) then
																																							if (v201 <= 3) then
																																								if (v201 <= (1 - 0)) then
																																									if (v201 == 0) then
																																										v198[v200[2]] = v198[v200[3]] % v200[10 - 6];
																																									else
																																										for v374 = v200[2], v200[9 - 6] do
																																											v198[v374] = nil;
																																										end
																																									end
																																								elseif (v201 > 2) then
																																									v63[v200[(1989 - (124 + 41)) - (1253 + (1233 - 665))]] = v198[v200[2]];
																																								else
																																									v152 = v200[283 - (228 + 52)];
																																								end
																																							elseif (v201 <= (666 - (347 + 314))) then
																																								if (v201 == (1 + (488 - (243 + 242)))) then
																																									v62[v200[(16 - 11) - (5 - 3)]] = v198[v200[2]];
																																								else
																																									local v238 = 0;
																																									local v239;
																																									local v240;
																																									local v241;
																																									local v242;
																																									local v243;
																																									while true do
																																										if (v238 == 1) then
																																											v241 = nil;
																																											v242 = nil;
																																											v238 = 2;
																																										end
																																										if (v238 == 2) then
																																											v243 = nil;
																																											while true do
																																												if (1 == v239) then
																																													local v394 = 0;
																																													while true do
																																														if (v394 == 1) then
																																															v239 = 2;
																																															break;
																																														end
																																														if (v394 == 0) then
																																															v153 = (v242 + v240) - (1 + 0);
																																															v243 = (0 - 0) + 0 + 0;
																																															v394 = 1;
																																														end
																																													end
																																												end
																																												if (v239 == 0) then
																																													local v395 = 0;
																																													while true do
																																														if (v395 == 1) then
																																															v239 = 1;
																																															break;
																																														end
																																														if (v395 == 0) then
																																															v240 = v200[6 - 4];
																																															v241, v242 = v195(v198[v240](v21(v198, v240 + 1 + 0, v200[2 + 1])));
																																															v395 = 1;
																																														end
																																													end
																																												end
																																												if (v239 == 2) then
																																													for v441 = v240, v153 do
																																														local v442 = 0;
																																														local v443;
																																														while true do
																																															if (v442 == 0) then
																																																v443 = 0;
																																																while true do
																																																	if (0 == v443) then
																																																		v243 = v243 + (1475 - (800 + 674));
																																																		v198[v441] = v241[v243];
																																																		break;
																																																	end
																																																end
																																																break;
																																															end
																																														end
																																													end
																																													break;
																																												end
																																											end
																																											break;
																																										end
																																										if (v238 == 0) then
																																											v239 = 0;
																																											v240 = nil;
																																											v238 = 1;
																																										end
																																									end
																																								end
																																							elseif (v201 == (3 + 3)) then
																																								local v244 = 0;
																																								local v245;
																																								local v246;
																																								local v247;
																																								while true do
																																									if (v244 == 0) then
																																										v245 = 0;
																																										v246 = nil;
																																										v244 = 1;
																																									end
																																									if (v244 == 1) then
																																										v247 = nil;
																																										while true do
																																											if (v245 == 0) then
																																												local v396 = 0;
																																												while true do
																																													if (v396 == 0) then
																																														v246 = v200[(2005 - (127 + 302)) - (1570 + 4)];
																																														v247 = v198[v200[3]];
																																														v396 = 1;
																																													end
																																													if (v396 == 1) then
																																														v245 = 1;
																																														break;
																																													end
																																												end
																																											end
																																											if (v245 == 1) then
																																												v198[v246 + ((773 - 375) - (372 + 25))] = v247;
																																												v198[v246] = v247[v200[18 - 14]];
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																								end
																																							else
																																								v198[v200[2]] = v198[v200[3]][v198[v200[1 + 3 + 0]]];
																																							end
																																						elseif (v201 <= 11) then
																																							if (v201 <= 9) then
																																								if (v201 == (1 + (570 - (140 + 423)))) then
																																									local v250 = 0;
																																									local v251;
																																									local v252;
																																									local v253;
																																									while true do
																																										if (v250 == 1) then
																																											v253 = nil;
																																											while true do
																																												if (v251 == 0) then
																																													local v400 = 0;
																																													while true do
																																														if (v400 == 1) then
																																															v251 = 1;
																																															break;
																																														end
																																														if (v400 == 0) then
																																															v252 = v200[2];
																																															v253 = v198[v200[5 - 2]];
																																															v400 = 1;
																																														end
																																													end
																																												end
																																												if (v251 == 1) then
																																													v198[v252 + 1] = v253;
																																													v198[v252] = v253[v198[v200[4]]];
																																													break;
																																												end
																																											end
																																											break;
																																										end
																																										if (v250 == 0) then
																																											v251 = 0;
																																											v252 = nil;
																																											v250 = 1;
																																										end
																																									end
																																								elseif (v198[v200[1 + 1]] == v200[4]) then
																																									v152 = v152 + 1;
																																								else
																																									v152 = v200[5 - 2];
																																								end
																																							elseif (v201 == (601 - (332 + 259))) then
																																								if (v198[v200[1 + 1]] < v198[v200[4]]) then
																																									v152 = v152 + ((2017 - 926) - (1036 + (1041 - (411 + 576))));
																																								else
																																									v152 = v200[283 - (84 + 196)];
																																								end
																																							else
																																								do
																																									return v198[v200[2 - 0]];
																																								end
																																							end
																																						elseif (v201 <= 13) then
																																							if (v201 == 12) then
																																								do
																																									return v198[v200[(12 - 8) - (2 + 0)]]();
																																								end
																																							else
																																								local v254 = 0;
																																								local v255;
																																								local v256;
																																								local v257;
																																								local v258;
																																								while true do
																																									if (v254 == 1) then
																																										v257 = nil;
																																										v258 = nil;
																																										v254 = 2;
																																									end
																																									if (v254 == 0) then
																																										v255 = 0;
																																										v256 = nil;
																																										v254 = 1;
																																									end
																																									if (v254 == 2) then
																																										while true do
																																											if (v255 == 0) then
																																												local v404 = 0;
																																												while true do
																																													if (v404 == 0) then
																																														v256 = v200[2];
																																														v257 = {v198[v256](v198[v256 + 1])};
																																														v404 = 1;
																																													end
																																													if (v404 == 1) then
																																														v255 = 1;
																																														break;
																																													end
																																												end
																																											end
																																											if (v255 == 1) then
																																												v258 = 0;
																																												for v444 = v256, v200[2 + (487 - (256 + 229))] do
																																													local v445 = 0;
																																													local v446;
																																													while true do
																																														if (v445 == 0) then
																																															v446 = 0;
																																															while true do
																																																if (v446 == 0) then
																																																	v258 = v258 + 1;
																																																	v198[v444] = v257[v258];
																																																	break;
																																																end
																																															end
																																															break;
																																														end
																																													end
																																												end
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																								end
																																							end
																																						elseif (v201 > (6 + 8)) then
																																							local v259 = 0;
																																							local v260;
																																							local v261;
																																							local v262;
																																							local v263;
																																							while true do
																																								if (v259 == 2) then
																																									while true do
																																										if (v260 == 1) then
																																											v263 = 0;
																																											for v447 = v261, v200[15 - 11] do
																																												local v448 = 0;
																																												local v449;
																																												while true do
																																													if (0 == v448) then
																																														v449 = 0;
																																														while true do
																																															if (v449 == 0) then
																																																v263 = v263 + (1 - 0);
																																																v198[v447] = v262[v263];
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											end
																																											break;
																																										end
																																										if (v260 == 0) then
																																											local v405 = 0;
																																											while true do
																																												if (v405 == 0) then
																																													v261 = v200[5 - 3];
																																													v262 = {v198[v261](v21(v198, v261 + 1, v200[1000 - (115 + 882)]))};
																																													v405 = 1;
																																												end
																																												if (v405 == 1) then
																																													v260 = 1;
																																													break;
																																												end
																																											end
																																										end
																																									end
																																									break;
																																								end
																																								if (v259 == 1) then
																																									v262 = nil;
																																									v263 = nil;
																																									v259 = 2;
																																								end
																																								if (v259 == 0) then
																																									v260 = 0;
																																									v261 = nil;
																																									v259 = 1;
																																								end
																																							end
																																						else
																																							v198[v200[2]] = {};
																																						end
																																					elseif (v201 <= 23) then
																																						if (v201 <= 19) then
																																							if (v201 <= 17) then
																																								if (v201 > (15 + 1)) then
																																									v198[v200[2]] = v200[6 - 3] ~= ((0 - 0) + 0);
																																								else
																																									local v266 = 0;
																																									local v267;
																																									local v268;
																																									while true do
																																										if (v266 == 0) then
																																											v267 = 0;
																																											v268 = nil;
																																											v266 = 1;
																																										end
																																										if (1 == v266) then
																																											while true do
																																												if (0 == v267) then
																																													v268 = v200[1 + 1];
																																													v198[v268](v198[v268 + (1359 - ((1880 - (657 + 93)) + (276 - 48)))]);
																																													break;
																																												end
																																											end
																																											break;
																																										end
																																									end
																																								end
																																							elseif (v201 == (1 + (1981 - (97 + 1867)))) then
																																								if (v198[v200[2]] ~= v198[v200[4]]) then
																																									v152 = v152 + 1;
																																								else
																																									v152 = v200[3];
																																								end
																																							else
																																								v198[v200[(141 + 373) - (6 + 24 + 273 + 209)]] = v200[3] + v198[v200[4]];
																																							end
																																						elseif (v201 <= ((162 - (79 + 73)) + (32 - 21))) then
																																							if (v201 > (11 + 5 + 1 + 3)) then
																																								local v270 = 0;
																																								local v271;
																																								while true do
																																									if (0 == v270) then
																																										v271 = 0;
																																										while true do
																																											if (v271 == 0) then
																																												v198[v200[585 - (315 + 268)]] = v200[3] ~= (0 - 0);
																																												v152 = v152 + 1;
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																								end
																																							else
																																								v198[v200[(2029 - (10 + 20)) - (244 + 1431 + 322)]] = v200[(1211 - (227 + 981)) + 0];
																																							end
																																						elseif (v201 == ((1719 - (1622 + 13)) - (23 + 39))) then
																																							local v274 = 0;
																																							local v275;
																																							local v276;
																																							local v277;
																																							while true do
																																								if (v274 == 0) then
																																									v275 = 0;
																																									v276 = nil;
																																									v274 = 1;
																																								end
																																								if (v274 == 1) then
																																									v277 = nil;
																																									while true do
																																										if (v275 == 1) then
																																											for v450 = v276 + 1 + 0, v200[3] do
																																												v15(v277, v198[v450]);
																																											end
																																											break;
																																										end
																																										if (v275 == 0) then
																																											local v408 = 0;
																																											while true do
																																												if (v408 == 0) then
																																													v276 = v200[(4 - 3) + (758 - (527 + 230))];
																																													v277 = v198[v276];
																																													v408 = 1;
																																												end
																																												if (v408 == 1) then
																																													v275 = 1;
																																													break;
																																												end
																																											end
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						else
																																							local v278 = 0;
																																							local v279;
																																							local v280;
																																							local v281;
																																							local v282;
																																							local v283;
																																							while true do
																																								if (v278 == 2) then
																																									v283 = nil;
																																									while true do
																																										if (v279 == 0) then
																																											local v409 = 0;
																																											while true do
																																												if (v409 == 1) then
																																													v279 = 1;
																																													break;
																																												end
																																												if (v409 == 0) then
																																													v280 = v200[2];
																																													v281, v282 = v195(v198[v280](v198[v280 + 1 + 0]));
																																													v409 = 1;
																																												end
																																											end
																																										end
																																										if (v279 == 1) then
																																											local v410 = 0;
																																											while true do
																																												if (1 == v410) then
																																													v279 = 2;
																																													break;
																																												end
																																												if (v410 == 0) then
																																													v153 = (v282 + v280) - (1 - 0);
																																													v283 = 931 - (714 + 217);
																																													v410 = 1;
																																												end
																																											end
																																										end
																																										if (2 == v279) then
																																											for v451 = v280, v153 do
																																												local v452 = 0;
																																												local v453;
																																												while true do
																																													if (v452 == 0) then
																																														v453 = 0;
																																														while true do
																																															if (v453 == 0) then
																																																v283 = v283 + 1 + 0;
																																																v198[v451] = v281[v283];
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											end
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																								if (v278 == 1) then
																																									v281 = nil;
																																									v282 = nil;
																																									v278 = 2;
																																								end
																																								if (v278 == 0) then
																																									v279 = 0;
																																									v280 = nil;
																																									v278 = 1;
																																								end
																																							end
																																						end
																																					elseif (v201 <= 27) then
																																						if (v201 <= 25) then
																																							if (v201 > (95 - (19 + 52))) then
																																								if not v198[v200[639 - (176 + 461)]] then
																																									v152 = v152 + 1 + 0;
																																								else
																																									v152 = v200[(4069 - 2586) - (62 + 1418)];
																																								end
																																							else
																																								v198[v200[2]] = v198[v200[10 - (902 - (701 + 194))]];
																																							end
																																						elseif (v201 == (1 + 25)) then
																																							local v286 = 0;
																																							local v287;
																																							local v288;
																																							local v289;
																																							local v290;
																																							while true do
																																								if (1 == v286) then
																																									v289 = nil;
																																									v290 = nil;
																																									v286 = 2;
																																								end
																																								if (v286 == 2) then
																																									while true do
																																										if (v287 == 0) then
																																											local v411 = 0;
																																											while true do
																																												if (v411 == 1) then
																																													v287 = 1;
																																													break;
																																												end
																																												if (v411 == 0) then
																																													v288 = v193[v200[3]];
																																													v289 = nil;
																																													v411 = 1;
																																												end
																																											end
																																										end
																																										if (v287 == 2) then
																																											for v454 = 1, v200[4] do
																																												local v455 = 0;
																																												local v456;
																																												local v457;
																																												while true do
																																													if (v455 == 0) then
																																														v456 = 0;
																																														v457 = nil;
																																														v455 = 1;
																																													end
																																													if (1 == v455) then
																																														while true do
																																															if (0 == v456) then
																																																local v533 = 0;
																																																while true do
																																																	if (1 == v533) then
																																																		v456 = 1;
																																																		break;
																																																	end
																																																	if (v533 == 0) then
																																																		v152 = v152 + (2 - (888 - (562 + 325)));
																																																		v457 = v192[v152];
																																																		v533 = 1;
																																																	end
																																																end
																																															end
																																															if (1 == v456) then
																																																if (v457[1] == (74 - 50)) then
																																																	v290[v454 - (1 + 0)] = {v198,v457[3]};
																																																else
																																																	v290[v454 - (1 + 0)] = {v62,v457[3]};
																																																end
																																																v197[#v197 + (1 - 0)] = v290;
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											end
																																											v198[v200[3 - 1]] = v50(v288, v289, v63);
																																											break;
																																										end
																																										if (v287 == 1) then
																																											local v413 = 0;
																																											while true do
																																												if (1 == v413) then
																																													v287 = 2;
																																													break;
																																												end
																																												if (v413 == 0) then
																																													v290 = {};
																																													v289 = v18({}, {[v7("\75\97\54\243\5\131\108", "\20\62\95\157\97\230")]=function(v488, v489)
																																														local v508 = 0;
																																														local v509;
																																														local v510;
																																														while true do
																																															if (1 == v508) then
																																																while true do
																																																	if (v509 == 0) then
																																																		local v551 = 0;
																																																		while true do
																																																			if (0 == v551) then
																																																				v510 = v290[v489];
																																																				return v510[1][v510[2]];
																																																			end
																																																		end
																																																	end
																																																end
																																																break;
																																															end
																																															if (v508 == 0) then
																																																v509 = 0;
																																																v510 = nil;
																																																v508 = 1;
																																															end
																																														end
																																													end,[v7("\227\219\73\65\203\237\73\64\217\252", "\188\132\39\36")]=function(v488, v489, v490)
																																														local v511 = 0;
																																														local v512;
																																														local v513;
																																														while true do
																																															if (v511 == 0) then
																																																v512 = 0;
																																																v513 = nil;
																																																v511 = 1;
																																															end
																																															if (1 == v511) then
																																																while true do
																																																	if (v512 == 0) then
																																																		v513 = v290[v489];
																																																		v513[1][v513[2]] = v490;
																																																		break;
																																																	end
																																																end
																																																break;
																																															end
																																														end
																																													end});
																																													v413 = 1;
																																												end
																																											end
																																										end
																																									end
																																									break;
																																								end
																																								if (v286 == 0) then
																																									v287 = 0;
																																									v288 = nil;
																																									v286 = 1;
																																								end
																																							end
																																						else
																																							do
																																								return;
																																							end
																																						end
																																					elseif (v201 <= (56 - (79 - 52))) then
																																						if (v201 > (300 - ((493 - (398 + 39)) + (1143 - (720 + 207))))) then
																																							local v291 = 0;
																																							local v292;
																																							local v293;
																																							local v294;
																																							local v295;
																																							while true do
																																								if (v291 == 1) then
																																									v294 = nil;
																																									v295 = nil;
																																									v291 = 2;
																																								end
																																								if (v291 == 0) then
																																									v292 = 0;
																																									v293 = nil;
																																									v291 = 1;
																																								end
																																								if (v291 == 2) then
																																									while true do
																																										if (v292 == 0) then
																																											local v414 = 0;
																																											while true do
																																												if (v414 == 0) then
																																													v293 = v200[2];
																																													v294 = v198[v293];
																																													v414 = 1;
																																												end
																																												if (v414 == 1) then
																																													v292 = 1;
																																													break;
																																												end
																																											end
																																										end
																																										if (v292 == 1) then
																																											v295 = v198[v293 + (4 - 2)];
																																											if (v295 > 0) then
																																												if (v294 > v198[v293 + 1]) then
																																													v152 = v200[(11 - 5) - 3];
																																												else
																																													v198[v293 + (7 - 4) + (904 - (607 + 297))] = v294;
																																												end
																																											elseif (v294 < v198[v293 + 1 + (1111 - (416 + 695))]) then
																																												v152 = v200[262 - (202 + 57)];
																																											else
																																												v198[v293 + 3] = v294;
																																											end
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						else
																																							local v296 = 0;
																																							local v297;
																																							local v298;
																																							while true do
																																								if (v296 == 1) then
																																									while true do
																																										if (v297 == 0) then
																																											v298 = v200[1 + 0 + 1];
																																											do
																																												return v21(v198, v298, v298 + v200[1265 - (311 + (2598 - (1296 + 351)))]);
																																											end
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																								if (v296 == 0) then
																																									v297 = 0;
																																									v298 = nil;
																																									v296 = 1;
																																								end
																																							end
																																						end
																																					elseif (v201 <= ((10 - 7) + (46 - 19))) then
																																						if v198[v200[258 - (211 + 45)]] then
																																							v152 = v152 + (591 - (91 + 499)) + (0 - 0);
																																						else
																																							v152 = v200[3];
																																						end
																																					elseif (v201 > (30 + 1)) then
																																						v198[v200[2]] = v198[v200[3]] + v198[v200[1 + 0 + 3]];
																																					elseif (v198[v200[(318 - 238) - ((914 - (61 + 805)) + (588 - (486 + 72)))]] == v198[v200[(15 + 0) - 11]]) then
																																						v152 = v152 + (192 - (129 + 29 + 33));
																																					else
																																						v152 = v200[(1992 - (767 + 1217)) - 5];
																																					end
																																				elseif (v201 <= 49) then
																																					if (v201 <= (113 - 73)) then
																																						if (v201 <= (111 - 75)) then
																																							if (v201 <= 34) then
																																								if (v201 > (97 - 64)) then
																																									if (v200[5 - 3] == v198[v200[4]]) then
																																										v152 = v152 + ((409 - (193 + 214)) - 1);
																																									else
																																										v152 = v200[1 + 2];
																																									end
																																								else
																																									local v299 = 0;
																																									local v300;
																																									local v301;
																																									while true do
																																										if (v299 == 1) then
																																											while true do
																																												if (v300 == 0) then
																																													v301 = v200[(2974 - (425 + 1524)) - (757 + (1752 - (822 + 664)))];
																																													v198[v301] = v198[v301](v21(v198, v301 + 1 + 0, v200[3]));
																																													break;
																																												end
																																											end
																																											break;
																																										end
																																										if (v299 == 0) then
																																											v300 = 0;
																																											v301 = nil;
																																											v299 = 1;
																																										end
																																									end
																																								end
																																							elseif (v201 > 35) then
																																								local v302 = 0;
																																								local v303;
																																								local v304;
																																								while true do
																																									if (v302 == 0) then
																																										v303 = 0;
																																										v304 = nil;
																																										v302 = 1;
																																									end
																																									if (v302 == 1) then
																																										while true do
																																											if (0 == v303) then
																																												v304 = v200[1302 - (601 + 699)];
																																												v198[v304] = v198[v304](v198[v304 + 1]);
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																								end
																																							else
																																								local v305 = 0;
																																								local v306;
																																								local v307;
																																								local v308;
																																								while true do
																																									if (v305 == 1) then
																																										v308 = nil;
																																										while true do
																																											if (v306 == 1) then
																																												for v458 = v307 + (3 - 2), v153 do
																																													v15(v308, v198[v458]);
																																												end
																																												break;
																																											end
																																											if (v306 == 0) then
																																												local v421 = 0;
																																												while true do
																																													if (v421 == 1) then
																																														v306 = 1;
																																														break;
																																													end
																																													if (v421 == 0) then
																																														v307 = v200[1 + 1];
																																														v308 = v198[v307];
																																														v421 = 1;
																																													end
																																												end
																																											end
																																										end
																																										break;
																																									end
																																									if (v305 == 0) then
																																										v306 = 0;
																																										v307 = nil;
																																										v305 = 1;
																																									end
																																								end
																																							end
																																						elseif (v201 <= 38) then
																																							if (v201 > 37) then
																																								v198[v200[2 - (784 - (97 + 687))]] = v198[v200[3]] - v198[v200[4]];
																																							else
																																								v198[v200[5 - 3]] = v198[v200[3]][v200[4]];
																																							end
																																						elseif (v201 > ((4 - 2) + 37)) then
																																							v198[v200[2]] = #v198[v200[6 - 3]];
																																						else
																																							local v313 = 0;
																																							local v314;
																																							local v315;
																																							local v316;
																																							local v317;
																																							while true do
																																								if (v313 == 1) then
																																									v316 = nil;
																																									v317 = nil;
																																									v313 = 2;
																																								end
																																								if (v313 == 2) then
																																									while true do
																																										if (v314 == 0) then
																																											local v422 = 0;
																																											while true do
																																												if (v422 == 0) then
																																													v315 = v200[(6 - 1) - (7 - 4)];
																																													v316 = {v198[v315](v21(v198, v315 + 1, v153))};
																																													v422 = 1;
																																												end
																																												if (v422 == 1) then
																																													v314 = 1;
																																													break;
																																												end
																																											end
																																										end
																																										if (v314 == 1) then
																																											v317 = 1218 - (37 + 1179 + (7 - 5));
																																											for v459 = v315, v200[1799 - (1304 + 491)] do
																																												local v460 = 0;
																																												local v461;
																																												while true do
																																													if (v460 == 0) then
																																														v461 = 0;
																																														while true do
																																															if (v461 == 0) then
																																																v317 = v317 + (847 - (24 + 822));
																																																v198[v459] = v316[v317];
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											end
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																								if (v313 == 0) then
																																									v314 = 0;
																																									v315 = nil;
																																									v313 = 1;
																																								end
																																							end
																																						end
																																					elseif (v201 <= 44) then
																																						if (v201 <= (1903 - (1087 + (2190 - (105 + 1311))))) then
																																							if (v201 == ((106 - 82) + 17)) then
																																								local v318 = 0;
																																								local v319;
																																								local v320;
																																								while true do
																																									if (v318 == 1) then
																																										while true do
																																											if (v319 == 0) then
																																												v320 = v200[1 + (1 - 0)];
																																												v198[v320](v21(v198, v320 + ((462 + 642) - (79 + (2595 - (344 + 1227)))), v200[(7 - 5) + (1422 - (1013 + 408))]));
																																												break;
																																											end
																																										end
																																										break;
																																									end
																																									if (v318 == 0) then
																																										v319 = 0;
																																										v320 = nil;
																																										v318 = 1;
																																									end
																																								end
																																							else
																																								v198[v200[(2 - 0) - 0]] = v63[v200[3]];
																																							end
																																						elseif (v201 > (457 - (127 + 287))) then
																																							local v323 = 0;
																																							local v324;
																																							local v325;
																																							while true do
																																								if (v323 == 0) then
																																									v324 = 0;
																																									v325 = nil;
																																									v323 = 1;
																																								end
																																								if (v323 == 1) then
																																									while true do
																																										if (v324 == 0) then
																																											v325 = v200[2];
																																											do
																																												return v198[v325](v21(v198, v325 + 1, v200[1 + 2]));
																																											end
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						else
																																							v198[v200[960 - (53 + 905)]][v198[v200[1 + 0 + 2 + 0]]] = v200[4];
																																						end
																																					elseif (v201 <= ((401 + 780) - ((2415 - (1198 + 507)) + 425))) then
																																						if (v201 > 45) then
																																							v198[v200[2]] = v198[v200[3 + 0]] - v200[4 + 0];
																																						else
																																							v198[v200[1 + 1]][v198[v200[(1 + 3) - (1 + 0)]]] = v198[v200[11 - (255 - (203 + 45))]];
																																						end
																																					elseif (v201 <= 47) then
																																						v198[v200[2 + 0]] = v50(v193[v200[2 + 1]], nil, v63);
																																					elseif (v201 == ((978 - (20 + 173)) - (170 + 567))) then
																																						local v383 = 0;
																																						local v384;
																																						local v385;
																																						while true do
																																							if (v383 == 0) then
																																								v384 = 0;
																																								v385 = nil;
																																								v383 = 1;
																																							end
																																							if (v383 == 1) then
																																								while true do
																																									if (v384 == 0) then
																																										v385 = v200[(2752 - 1715) - (247 + 788)];
																																										v198[v385](v21(v198, v385 + 1, v153));
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																						end
																																					else
																																						v198[v200[(3305 - 2175) - (416 + 306 + 406)]] = v198[v200[1 + (2 - 0)]] * v198[v200[431 - (321 + 106)]];
																																					end
																																				elseif (v201 <= (137 - 80)) then
																																					if (v201 <= (10 + 6 + 37)) then
																																						if (v201 <= (51 + 0)) then
																																							if (v201 > (17 + 33)) then
																																								v198[v200[2]] = v198[v200[3]] * v200[14 - 10];
																																							else
																																								v198[v200[2]] = v198[v200[4 - 1]] % v198[v200[4]];
																																							end
																																						elseif (v201 == 52) then
																																							v198[v200[1 + 1]] = v62[v200[267 - (162 + 102)]];
																																						else
																																							local v336 = 0;
																																							local v337;
																																							local v338;
																																							local v339;
																																							local v340;
																																							local v341;
																																							while true do
																																								if (v336 == 1) then
																																									v339 = nil;
																																									v340 = nil;
																																									v336 = 2;
																																								end
																																								if (v336 == 2) then
																																									v341 = nil;
																																									while true do
																																										if (v337 == 2) then
																																											for v462 = v338, v153 do
																																												local v463 = 0;
																																												local v464;
																																												while true do
																																													if (v463 == 0) then
																																														v464 = 0;
																																														while true do
																																															if (v464 == 0) then
																																																v341 = v341 + (2 - 1);
																																																v198[v462] = v339[v341];
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											end
																																											break;
																																										end
																																										if (v337 == 1) then
																																											local v425 = 0;
																																											while true do
																																												if (0 == v425) then
																																													v153 = (v340 + v338) - (3 - 2);
																																													v341 = 0 + (0 - 0);
																																													v425 = 1;
																																												end
																																												if (v425 == 1) then
																																													v337 = 2;
																																													break;
																																												end
																																											end
																																										end
																																										if (v337 == 0) then
																																											local v426 = 0;
																																											while true do
																																												if (v426 == 0) then
																																													v338 = v200[1696 - (1122 + 572)];
																																													v339, v340 = v195(v198[v338](v21(v198, v338 + (2 - 1), v153)));
																																													v426 = 1;
																																												end
																																												if (1 == v426) then
																																													v337 = 1;
																																													break;
																																												end
																																											end
																																										end
																																									end
																																									break;
																																								end
																																								if (v336 == 0) then
																																									v337 = 0;
																																									v338 = nil;
																																									v336 = 1;
																																								end
																																							end
																																						end
																																					elseif (v201 <= (22 + 33)) then
																																						if (v201 > 54) then
																																							v198[v200[(8 + 1) - (7 + 0)]] = not v198[v200[6 - 3]];
																																						else
																																							local v343 = 0;
																																							local v344;
																																							local v345;
																																							local v346;
																																							while true do
																																								if (v343 == 0) then
																																									v344 = 0;
																																									v345 = nil;
																																									v343 = 1;
																																								end
																																								if (v343 == 1) then
																																									v346 = nil;
																																									while true do
																																										if (0 == v344) then
																																											local v427 = 0;
																																											while true do
																																												if (v427 == 0) then
																																													v345 = v200[(1256 - (707 + 548)) + (1120 - (736 + 382))];
																																													v346 = v198[v345];
																																													v427 = 1;
																																												end
																																												if (v427 == 1) then
																																													v344 = 1;
																																													break;
																																												end
																																											end
																																										end
																																										if (v344 == 1) then
																																											for v465 = v345 + (3 - 2), v200[4] do
																																												v346 = v346 .. v198[v465];
																																											end
																																											v198[v200[(896 - (316 + 576)) - (1394 - (1252 + 140))]] = v346;
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																							end
																																						end
																																					elseif (v201 > (660 - (364 + 240))) then
																																						v198[v200[(3 + 2) - (11 - 8)]]();
																																					else
																																						local v347 = 0;
																																						local v348;
																																						local v349;
																																						while true do
																																							if (v347 == 0) then
																																								v348 = 0;
																																								v349 = nil;
																																								v347 = 1;
																																							end
																																							if (v347 == 1) then
																																								while true do
																																									if (v348 == 0) then
																																										v349 = v200[2 + 0];
																																										v198[v349] = v198[v349]();
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																						end
																																					end
																																				elseif (v201 <= ((2911 - 2065) - (673 + 97 + 15))) then
																																					if (v201 <= 59) then
																																						if (v201 == ((1748 + 304) - (1439 + 254 + 301))) then
																																							local v350 = 0;
																																							local v351;
																																							local v352;
																																							local v353;
																																							local v354;
																																							while true do
																																								if (1 == v350) then
																																									v353 = nil;
																																									v354 = nil;
																																									v350 = 2;
																																								end
																																								if (2 == v350) then
																																									while true do
																																										if (v351 == 0) then
																																											local v431 = 0;
																																											while true do
																																												if (v431 == 1) then
																																													v351 = 1;
																																													break;
																																												end
																																												if (v431 == 0) then
																																													v352 = v200[1001 - (694 + 305)];
																																													v353 = v198[v352 + 2 + 0];
																																													v431 = 1;
																																												end
																																											end
																																										end
																																										if (v351 == 1) then
																																											local v432 = 0;
																																											while true do
																																												if (v432 == 1) then
																																													v351 = 2;
																																													break;
																																												end
																																												if (v432 == 0) then
																																													v354 = v198[v352] + v353;
																																													v198[v352] = v354;
																																													v432 = 1;
																																												end
																																											end
																																										end
																																										if (2 == v351) then
																																											if (v353 > 0) then
																																												if (v354 <= v198[v352 + 1]) then
																																													local v518 = 0;
																																													local v519;
																																													while true do
																																														if (v518 == 0) then
																																															v519 = 0;
																																															while true do
																																																if (v519 == 0) then
																																																	v152 = v200[4 - 1];
																																																	v198[v352 + (1973 - (1604 + 366))] = v354;
																																																	break;
																																																end
																																															end
																																															break;
																																														end
																																													end
																																												end
																																											elseif (v354 >= v198[v352 + 1]) then
																																												local v520 = 0;
																																												local v521;
																																												while true do
																																													if (v520 == 0) then
																																														v521 = 0;
																																														while true do
																																															if (v521 == 0) then
																																																v152 = v200[1005 - (356 + 646)];
																																																v198[v352 + 3] = v354;
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											end
																																											break;
																																										end
																																									end
																																									break;
																																								end
																																								if (v350 == 0) then
																																									v351 = 0;
																																									v352 = nil;
																																									v350 = 1;
																																								end
																																							end
																																						else
																																							local v355 = 0;
																																							local v356;
																																							local v357;
																																							local v358;
																																							local v359;
																																							local v360;
																																							local v361;
																																							while true do
																																								if (v355 == 1) then
																																									v358 = nil;
																																									v359 = nil;
																																									v355 = 2;
																																								end
																																								if (v355 == 2) then
																																									v360 = nil;
																																									v361 = nil;
																																									v355 = 3;
																																								end
																																								if (v355 == 3) then
																																									while true do
																																										if (v356 == 1) then
																																											local v433 = 0;
																																											while true do
																																												if (v433 == 0) then
																																													v359 = v357 + 2;
																																													v360 = {v198[v357](v198[v357 + 1], v198[v359])};
																																													v433 = 1;
																																												end
																																												if (v433 == 1) then
																																													v356 = 2;
																																													break;
																																												end
																																											end
																																										end
																																										if (v356 == 3) then
																																											if v361 then
																																												local v474 = 0;
																																												local v475;
																																												while true do
																																													if (v474 == 0) then
																																														v475 = 0;
																																														while true do
																																															if (0 == v475) then
																																																v198[v359] = v361;
																																																v152 = v200[3];
																																																break;
																																															end
																																														end
																																														break;
																																													end
																																												end
																																											else
																																												v152 = v152 + ((21 + 38) - (48 + 10));
																																											end
																																											break;
																																										end
																																										if (v356 == 2) then
																																											local v434 = 0;
																																											while true do
																																												if (v434 == 1) then
																																													v356 = 3;
																																													break;
																																												end
																																												if (0 == v434) then
																																													for v522 = 2 - 1, v358 do
																																														v198[v359 + v522] = v360[v522];
																																													end
																																													v361 = v360[2 - (2 - 1)];
																																													v434 = 1;
																																												end
																																											end
																																										end
																																										if (0 == v356) then
																																											local v435 = 0;
																																											while true do
																																												if (1 == v435) then
																																													v356 = 1;
																																													break;
																																												end
																																												if (v435 == 0) then
																																													v357 = v200[1279 - (579 + 698)];
																																													v358 = v200[15 - 11];
																																													v435 = 1;
																																												end
																																											end
																																										end
																																									end
																																									break;
																																								end
																																								if (v355 == 0) then
																																									v356 = 0;
																																									v357 = nil;
																																									v355 = 1;
																																								end
																																							end
																																						end
																																					elseif (v201 > (1 + 59)) then
																																						local v362 = 0;
																																						local v363;
																																						local v364;
																																						local v365;
																																						while true do
																																							if (v362 == 0) then
																																								v363 = 0;
																																								v364 = nil;
																																								v362 = 1;
																																							end
																																							if (v362 == 1) then
																																								v365 = nil;
																																								while true do
																																									if (v363 == 1) then
																																										for v466 = 1, #v197 do
																																											local v467 = 0;
																																											local v468;
																																											local v469;
																																											while true do
																																												if (v467 == 0) then
																																													v468 = 0;
																																													v469 = nil;
																																													v467 = 1;
																																												end
																																												if (1 == v467) then
																																													while true do
																																														if (v468 == 0) then
																																															v469 = v197[v466];
																																															for v542 = 0 + 0, #v469 do
																																																local v543 = 0;
																																																local v544;
																																																local v545;
																																																local v546;
																																																local v547;
																																																while true do
																																																	if (v543 == 2) then
																																																		while true do
																																																			if (1 == v544) then
																																																				v547 = v545[1 + (1471 - (1046 + 424))];
																																																				if ((v546 == v198) and (v547 >= v364)) then
																																																					local v561 = 0;
																																																					local v562;
																																																					while true do
																																																						if (v561 == 0) then
																																																							v562 = 0;
																																																							while true do
																																																								if (v562 == 0) then
																																																									v365[v547] = v546[v547];
																																																									v545[1] = v365;
																																																									break;
																																																								end
																																																							end
																																																							break;
																																																						end
																																																					end
																																																				end
																																																				break;
																																																			end
																																																			if (v544 == 0) then
																																																				local v560 = 0;
																																																				while true do
																																																					if (v560 == 0) then
																																																						v545 = v469[v542];
																																																						v546 = v545[1];
																																																						v560 = 1;
																																																					end
																																																					if (v560 == 1) then
																																																						v544 = 1;
																																																						break;
																																																					end
																																																				end
																																																			end
																																																		end
																																																		break;
																																																	end
																																																	if (v543 == 1) then
																																																		v546 = nil;
																																																		v547 = nil;
																																																		v543 = 2;
																																																	end
																																																	if (0 == v543) then
																																																		v544 = 0;
																																																		v545 = nil;
																																																		v543 = 1;
																																																	end
																																																end
																																															end
																																															break;
																																														end
																																													end
																																													break;
																																												end
																																											end
																																										end
																																										break;
																																									end
																																									if (v363 == 0) then
																																										local v436 = 0;
																																										while true do
																																											if (v436 == 0) then
																																												v364 = v200[2];
																																												v365 = {};
																																												v436 = 1;
																																											end
																																											if (v436 == 1) then
																																												v363 = 1;
																																												break;
																																											end
																																										end
																																									end
																																								end
																																								break;
																																							end
																																						end
																																					elseif (v200[2 + 0] > v198[v200[17 - 13]]) then
																																						v152 = v152 + (2 - 1);
																																					else
																																						v152 = v200[3];
																																					end
																																				elseif (v201 <= 63) then
																																					if (v201 == 62) then
																																						local v366 = 0;
																																						local v367;
																																						local v368;
																																						local v369;
																																						local v370;
																																						while true do
																																							if (0 == v366) then
																																								v367 = 0;
																																								v368 = nil;
																																								v366 = 1;
																																							end
																																							if (v366 == 1) then
																																								v369 = nil;
																																								v370 = nil;
																																								v366 = 2;
																																							end
																																							if (v366 == 2) then
																																								while true do
																																									if (v367 == 1) then
																																										v370 = v200[3];
																																										for v470 = 1301 - (700 + (1098 - 498)), v370 do
																																											v369[v470] = v198[v368 + v470];
																																										end
																																										break;
																																									end
																																									if (v367 == 0) then
																																										local v438 = 0;
																																										while true do
																																											if (v438 == 0) then
																																												v368 = v200[1 + 1];
																																												v369 = v198[v368];
																																												v438 = 1;
																																											end
																																											if (v438 == 1) then
																																												v367 = 1;
																																												break;
																																											end
																																										end
																																									end
																																								end
																																								break;
																																							end
																																						end
																																					else
																																						local v371 = 0;
																																						local v372;
																																						local v373;
																																						while true do
																																							if (v371 == 1) then
																																								while true do
																																									if (v372 == 0) then
																																										v373 = v200[2];
																																										v198[v373] = v198[v373](v21(v198, v373 + (901 - ((1930 - 1132) + 13 + 89)), v153));
																																										break;
																																									end
																																								end
																																								break;
																																							end
																																							if (v371 == 0) then
																																								v372 = 0;
																																								v373 = nil;
																																								v371 = 1;
																																							end
																																						end
																																					end
																																				elseif (v201 <= ((19 + 178) - 133)) then
																																					if (v198[v200[6 - 4]] ~= v200[859 - (446 + 409)]) then
																																						v152 = v152 + 1;
																																					else
																																						v152 = v200[3];
																																					end
																																				elseif (v201 == (232 - 167)) then
																																					v198[v200[(1079 - (327 + 87)) - (99 + 119 + 445)]] = v198[v200[5 - 2]] + v200[4];
																																				else
																																					local v390 = 0;
																																					local v391;
																																					local v392;
																																					while true do
																																						if (v390 == 0) then
																																							v391 = 0;
																																							v392 = nil;
																																							v390 = 1;
																																						end
																																						if (v390 == 1) then
																																							while true do
																																								if (v391 == 0) then
																																									v392 = v200[132 - (53 + 77)];
																																									do
																																										return v21(v198, v392, v153);
																																									end
																																									break;
																																								end
																																							end
																																							break;
																																						end
																																					end
																																				end
																																				v152 = v152 + 1;
																																				break;
																																			end
																																			if (v203 == 0) then
																																				local v221 = 0;
																																				while true do
																																					if (1 == v221) then
																																						v203 = 1;
																																						break;
																																					end
																																					if (v221 == 0) then
																																						v200 = v192[v152];
																																						v201 = v200[1];
																																						v221 = 1;
																																					end
																																				end
																																			end
																																		end
																																		break;
																																	end
																																end
																															end
																															break;
																														end
																														if (v191 == 0) then
																															v192 = v71;
																															v193 = v72;
																															v194 = v73;
																															v195 = v48;
																															v191 = 1;
																														end
																														if (v191 == 1) then
																															v196 = {};
																															v197 = {};
																															v198 = {};
																															for v204 = 0 + 0, v155 do
																																if (v204 >= v194) then
																																	v196[v204 - v194] = v154[v204 + (2 - 1)];
																																else
																																	v198[v204] = v154[v204 + (650 - (478 + 171))];
																																end
																															end
																															v191 = 2;
																														end
																													end
																												end;
																												v179 = 1;
																											end
																											if (v179 == 1) then
																												v151 = 3;
																												break;
																											end
																										end
																									end
																								end
																								break;
																							end
																							if (v150 == 0) then
																								v151 = 0;
																								v152 = nil;
																								v150 = 1;
																							end
																							if (v150 == 2) then
																								v155 = nil;
																								v156 = nil;
																								v150 = 3;
																							end
																						end
																					end;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
														if (v69 == 0) then
															v70 = 0;
															v71 = nil;
															v69 = 1;
														end
														if (v69 == 1) then
															v72 = nil;
															v73 = nil;
															v69 = 2;
														end
													end
												end;
												return v50(v49(), {}, v31)(...);
											end
										end
									end
									if (v38 == 2) then
										local v54 = 0;
										while true do
											if (v54 == 1) then
												v43 = function()
													local v74 = 0;
													local v75;
													local v76;
													local v77;
													while true do
														if (v74 == 1) then
															v77 = nil;
															while true do
																local v119 = 0;
																while true do
																	if (0 == v119) then
																		if (1 == v75) then
																			return (v77 * 256) + v76;
																		end
																		if (v75 == (0 - 0)) then
																			local v130 = 0;
																			while true do
																				if (v130 == 0) then
																					v76, v77 = v9(v30, v39, v39 + (3 - 1));
																					v39 = v39 + ((317 + 110) - (292 + 133));
																					v130 = 1;
																				end
																				if (v130 == 1) then
																					v75 = 1;
																					break;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
														if (v74 == 0) then
															v75 = 1474 - (412 + 1062);
															v76 = nil;
															v74 = 1;
														end
													end
												end;
												v38 = 3;
												break;
											end
											if (0 == v54) then
												v42 = function()
													local v78 = 0;
													local v79;
													local v80;
													while true do
														if (v78 == 1) then
															while true do
																local v120 = 0;
																while true do
																	if (v120 == 0) then
																		if (v79 == (0 + 0)) then
																			local v131 = 0;
																			while true do
																				if (v131 == 0) then
																					v80 = v9(v30, v39, v39);
																					v39 = v39 + (1 - 0);
																					v131 = 1;
																				end
																				if (v131 == 1) then
																					v79 = 1;
																					break;
																				end
																			end
																		end
																		if (v79 == (1 - 0)) then
																			return v80;
																		end
																		break;
																	end
																end
															end
															break;
														end
														if (v78 == 0) then
															v79 = 0;
															v80 = nil;
															v78 = 1;
														end
													end
												end;
												v43 = nil;
												v54 = 1;
											end
										end
									end
									v52 = 2;
								end
								if (3 == v52) then
									if (v38 == 0) then
										local v55 = 0;
										while true do
											if (v55 == 0) then
												v39 = 3 - 2;
												v40 = nil;
												v55 = 1;
											end
											if (v55 == 1) then
												v30 = v12(v11(v30, 1957 - (897 + 1054 + 1)), v7("\168\121", "\134\87\79\52\194\69\201\25"), function(v64)
													if (v9(v64, 844 - (763 + 79)) == 79) then
														local v107 = 0;
														local v108;
														while true do
															if (v107 == 0) then
																v108 = 0;
																while true do
																	if (v108 == 0) then
																		local v125 = 0;
																		while true do
																			if (v125 == 0) then
																				v40 = v8(v11(v64, 674 - (204 + 469), (3 + 1) - 3));
																				return "";
																			end
																		end
																	end
																end
																break;
															end
														end
													else
														local v109 = 0;
														local v110;
														local v111;
														while true do
															if (v109 == 1) then
																while true do
																	if (0 == v110) then
																		v111 = v10(v8(v64, (4214 - 2653) - (501 + 2 + (1401 - 359))));
																		if v40 then
																			local v143 = 0;
																			local v144;
																			local v145;
																			while true do
																				if (v143 == 1) then
																					while true do
																						local v172 = 0;
																						while true do
																							if (0 == v172) then
																								if (v144 == 1) then
																									return v145;
																								end
																								if (v144 == 0) then
																									local v180 = 0;
																									while true do
																										if (v180 == 1) then
																											v144 = 1;
																											break;
																										end
																										if (v180 == 0) then
																											v145 = v13(v111, v40);
																											v40 = nil;
																											v180 = 1;
																										end
																									end
																								end
																								break;
																							end
																						end
																					end
																					break;
																				end
																				if (v143 == 0) then
																					v144 = 0;
																					v145 = nil;
																					v143 = 1;
																				end
																			end
																		else
																			return v111;
																		end
																		break;
																	end
																end
																break;
															end
															if (v109 == 0) then
																v110 = 0;
																v111 = nil;
																v109 = 1;
															end
														end
													end
												end);
												v38 = 1;
												break;
											end
										end
									end
									if (v38 == 4) then
										local v56 = 0;
										while true do
											if (v56 == 1) then
												v46 = function(v65)
													local v81 = 0;
													local v82;
													local v83;
													local v84;
													while true do
														if (v81 == 0) then
															v82 = 0;
															v83 = nil;
															v81 = 1;
														end
														if (v81 == 1) then
															v84 = nil;
															while true do
																local v121 = 0;
																while true do
																	if (v121 == 1) then
																		if (v82 == 2) then
																			local v132 = 0;
																			while true do
																				if (v132 == 1) then
																					v82 = 3;
																					break;
																				end
																				if (v132 == 0) then
																					v84 = {};
																					for v157 = 1 + 0, #v83 do
																						v84[v157] = v10(v9(v11(v83, v157, v157)));
																					end
																					v132 = 1;
																				end
																			end
																		end
																		if (v82 == (4 - 3)) then
																			local v133 = 0;
																			while true do
																				if (0 == v133) then
																					v83 = v11(v30, v39, (v39 + v65) - 1);
																					v39 = v39 + v65;
																					v133 = 1;
																				end
																				if (v133 == 1) then
																					v82 = 2;
																					break;
																				end
																			end
																		end
																		break;
																	end
																	if (v121 == 0) then
																		if (0 == v82) then
																			local v134 = 0;
																			while true do
																				if (v134 == 1) then
																					v82 = 1 + 0;
																					break;
																				end
																				if (0 == v134) then
																					v83 = nil;
																					if not v65 then
																						local v173 = 0;
																						local v174;
																						while true do
																							if (v173 == 0) then
																								v174 = 0 - 0;
																								while true do
																									if (v174 == (0 - 0)) then
																										v65 = v44();
																										if (v65 == ((0 - 0) - (0 - 0))) then
																											return "";
																										end
																										break;
																									end
																								end
																								break;
																							end
																						end
																					end
																					v134 = 1;
																				end
																			end
																		end
																		if (v82 == 3) then
																			return v14(v84);
																		end
																		v121 = 1;
																	end
																end
															end
															break;
														end
													end
												end;
												v38 = 5;
												break;
											end
											if (v56 == 0) then
												v45 = function()
													local v85 = 0;
													local v86;
													local v87;
													local v88;
													local v89;
													local v90;
													local v91;
													local v92;
													while true do
														if (v85 == 3) then
															v92 = nil;
															while true do
																local v122 = 0;
																while true do
																	if (0 == v122) then
																		if (v86 == 1) then
																			local v135 = 0;
																			while true do
																				if (v135 == 0) then
																					v89 = 1;
																					v90 = (v41(v88, 1 + 0, 31 - 11) * (2 ^ ((34 - 18) + 16))) + v87;
																					v135 = 1;
																				end
																				if (v135 == 1) then
																					v86 = 5 - 3;
																					break;
																				end
																			end
																		end
																		if (0 == v86) then
																			local v136 = 0;
																			while true do
																				if (v136 == 0) then
																					v87 = v44();
																					v88 = v44();
																					v136 = 1;
																				end
																				if (1 == v136) then
																					v86 = 1;
																					break;
																				end
																			end
																		end
																		v122 = 1;
																	end
																	if (1 == v122) then
																		if (v86 == (5 - 2)) then
																			local v137 = 0;
																			while true do
																				if (v137 == 0) then
																					if (v91 == (0 + 0 + 0)) then
																						if (v90 == (0 + 0 + 0)) then
																							return v92 * (0 + 0 + 0);
																						else
																							local v175 = 0;
																							local v176;
																							while true do
																								if (v175 == 0) then
																									v176 = 0;
																									while true do
																										if (v176 == 0) then
																											v91 = 3 - 2;
																											v89 = ((1121 - (558 + 563)) + 0) - 0;
																											break;
																										end
																									end
																									break;
																								end
																							end
																						end
																					elseif (v91 == 2047) then
																						return ((v90 == (1197 - (404 + 793))) and (v92 * (((142 + 729) - (65 + 128 + (1467 - 790))) / ((0 + 0) - (0 + 0))))) or (v92 * NaN);
																					end
																					return v16(v92, v91 - (((1737 - 998) - (1663 - (796 + 554))) + (733 - 136))) * (v89 + (v90 / (2 ^ 52)));
																				end
																			end
																		end
																		if (v86 == 2) then
																			local v138 = 0;
																			while true do
																				if (v138 == 0) then
																					v91 = v41(v88, 21, (13 + 30) - (7 + 5));
																					v92 = ((v41(v88, 32) == ((1166 - (200 + 933 + 32)) - 0)) and -((352 + 202) - (70 + (1396 - (772 + 141))))) or 1;
																					v138 = 1;
																				end
																				if (v138 == 1) then
																					v86 = 3;
																					break;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
														if (v85 == 2) then
															v90 = nil;
															v91 = nil;
															v85 = 3;
														end
														if (v85 == 1) then
															v88 = nil;
															v89 = nil;
															v85 = 2;
														end
														if (v85 == 0) then
															v86 = 0;
															v87 = nil;
															v85 = 1;
														end
													end
												end;
												v46 = nil;
												v56 = 1;
											end
										end
									end
									break;
								end
								if (v52 == 0) then
									if (v38 == 3) then
										local v57 = 0;
										while true do
											if (1 == v57) then
												v45 = nil;
												v38 = 4;
												break;
											end
											if (v57 == 0) then
												v44 = nil;
												v44 = function()
													local v93 = 0;
													local v94;
													local v95;
													local v96;
													local v97;
													local v98;
													while true do
														if (v93 == 1) then
															v96 = nil;
															v97 = nil;
															v93 = 2;
														end
														if (v93 == 0) then
															v94 = 0 + 0;
															v95 = nil;
															v93 = 1;
														end
														if (2 == v93) then
															v98 = nil;
															while true do
																local v123 = 0;
																while true do
																	if (v123 == 0) then
																		if (v94 == (0 + 0)) then
																			local v139 = 0;
																			while true do
																				if (v139 == 0) then
																					v95, v96, v97, v98 = v9(v30, v39, v39 + 3);
																					v39 = v39 + (1895 - (1291 + 600));
																					v139 = 1;
																				end
																				if (v139 == 1) then
																					v94 = 686 - (489 + 196);
																					break;
																				end
																			end
																		end
																		if (v94 == (4 - 3)) then
																			return (v98 * (16778733 - (1353 + 164))) + (v97 * (10654 + (56597 - (208 + 1507)))) + (v96 * 256) + v95;
																		end
																		break;
																	end
																end
															end
															break;
														end
													end
												end;
												v57 = 1;
											end
										end
									end
									if (v38 == 6) then
										local v58 = 0;
										while true do
											if (v58 == 0) then
												v49 = nil;
												v49 = function()
													local v99 = 0;
													local v100;
													local v101;
													local v102;
													local v103;
													local v104;
													local v105;
													local v106;
													while true do
														if (v99 == 3) then
															v106 = nil;
															while true do
																local v124 = 0;
																while true do
																	if (v124 == 0) then
																		if (v100 == 1) then
																			local v140 = 0;
																			while true do
																				if (v140 == 1) then
																					for v159 = 1 + 0, v105 do
																						local v160 = 0;
																						local v161;
																						local v162;
																						local v163;
																						while true do
																							if (v160 == 1) then
																								v163 = nil;
																								while true do
																									if (v161 == 0) then
																										local v181 = 0;
																										while true do
																											if (v181 == 0) then
																												v162 = v42();
																												v163 = nil;
																												v181 = 1;
																											end
																											if (v181 == 1) then
																												v161 = 1;
																												break;
																											end
																										end
																									end
																									if (v161 == 1) then
																										if (v162 == ((5386 - 4004) - ((3566 - 2395) + (1303 - (772 + 321))))) then
																											v163 = v42() ~= (0 - 0);
																										elseif (v162 == 2) then
																											v163 = v45();
																										elseif (v162 == (382 - (279 + 100))) then
																											v163 = v46();
																										end
																										v106[v159] = v163;
																										break;
																									end
																								end
																								break;
																							end
																							if (v160 == 0) then
																								v161 = 0;
																								v162 = nil;
																								v160 = 1;
																							end
																						end
																					end
																					v104[(620 - (259 + 358)) - (0 - 0)] = v42();
																					v140 = 2;
																				end
																				if (v140 == 0) then
																					v105 = v44();
																					v106 = {};
																					v140 = 1;
																				end
																				if (v140 == 2) then
																					v100 = 2;
																					break;
																				end
																			end
																		end
																		if (v100 == 2) then
																			local v141 = 0;
																			while true do
																				if (0 == v141) then
																					for v164 = 1 + 0, v44() do
																						local v165 = 0;
																						local v166;
																						local v167;
																						while true do
																							if (0 == v165) then
																								v166 = 0;
																								v167 = nil;
																								v165 = 1;
																							end
																							if (1 == v165) then
																								while true do
																									if (v166 == 0) then
																										v167 = v42();
																										if (v41(v167, 1, 1 + (0 - 0)) == 0) then
																											local v186 = 0;
																											local v187;
																											local v188;
																											local v189;
																											local v190;
																											while true do
																												if (v186 == 0) then
																													v187 = 0;
																													v188 = nil;
																													v186 = 1;
																												end
																												if (v186 == 2) then
																													while true do
																														if (v187 == 2) then
																															local v205 = 0;
																															while true do
																																if (v205 == 1) then
																																	v187 = 3;
																																	break;
																																end
																																if (v205 == 0) then
																																	if (v41(v189, 1 + 0 + (1168 - (1078 + 90)), 462 - (113 + 348)) == 1) then
																																		v190[(1 - 0) + 1 + 0] = v106[v190[(4 + 2) - (3 + 1)]];
																																	end
																																	if (v41(v189, 2, 2) == (1 + (845 - (469 + 376)))) then
																																		v190[3] = v106[v190[1 + 2]];
																																	end
																																	v205 = 1;
																																end
																															end
																														end
																														if (3 == v187) then
																															if (v41(v189, 6 - (2 + 1), 3 + 0) == (536 - ((499 - 291) + 327))) then
																																v190[5 - (537 - (310 + 226))] = v106[v190[4]];
																															end
																															v101[v164] = v190;
																															break;
																														end
																														if (1 == v187) then
																															local v207 = 0;
																															while true do
																																if (v207 == 0) then
																																	v190 = {v43(),v43(),nil,nil};
																																	if (v188 == ((1296 - (77 + 60)) - ((1762 - (571 + 924)) + 892))) then
																																		local v219 = 0;
																																		local v220;
																																		while true do
																																			if (v219 == 0) then
																																				v220 = 0;
																																				while true do
																																					if (v220 == 0) then
																																						v190[3 + 0] = v43();
																																						v190[4] = v43();
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	elseif (v188 == 1) then
																																		v190[3] = v44();
																																	elseif (v188 == 2) then
																																		v190[(12 - 8) - 1] = v44() - ((1501 - (753 + 746)) ^ (3 + 13));
																																	elseif (v188 == (3 - 0)) then
																																		local v228 = 0;
																																		local v229;
																																		while true do
																																			if (v228 == 0) then
																																				v229 = 0;
																																				while true do
																																					if (v229 == 0) then
																																						v190[5 - 2] = v44() - (2 ^ 16);
																																						v190[1677 - (685 + 988)] = v43();
																																						break;
																																					end
																																				end
																																				break;
																																			end
																																		end
																																	end
																																	v207 = 1;
																																end
																																if (v207 == 1) then
																																	v187 = 2;
																																	break;
																																end
																															end
																														end
																														if (v187 == 0) then
																															local v208 = 0;
																															while true do
																																if (v208 == 0) then
																																	v188 = v41(v167, (1115 - (172 + 940)) - (2 - 1), 1 + (1990 - (236 + 1752)));
																																	v189 = v41(v167, 212 - (92 + 116), 6);
																																	v208 = 1;
																																end
																																if (v208 == 1) then
																																	v187 = 1;
																																	break;
																																end
																															end
																														end
																													end
																													break;
																												end
																												if (v186 == 1) then
																													v189 = nil;
																													v190 = nil;
																													v186 = 2;
																												end
																											end
																										end
																										break;
																									end
																								end
																								break;
																							end
																						end
																					end
																					for v168 = 3 - 2, v44() do
																						v102[v168 - 1] = v49();
																					end
																					v141 = 1;
																				end
																				if (v141 == 1) then
																					for v170 = 1, v44() do
																						v103[v170] = v44();
																					end
																					return v104;
																				end
																			end
																		end
																		v124 = 1;
																	end
																	if (v124 == 1) then
																		if (v100 == 0) then
																			local v142 = 0;
																			while true do
																				if (v142 == 0) then
																					v101 = {};
																					v102 = {};
																					v142 = 1;
																				end
																				if (v142 == 2) then
																					v100 = 1;
																					break;
																				end
																				if (v142 == 1) then
																					v103 = {};
																					v104 = {v101,v102,nil,v103};
																					v142 = 2;
																				end
																			end
																		end
																		break;
																	end
																end
															end
															break;
														end
														if (v99 == 0) then
															v100 = 0;
															v101 = nil;
															v99 = 1;
														end
														if (v99 == 1) then
															v102 = nil;
															v103 = nil;
															v99 = 2;
														end
														if (v99 == 2) then
															v104 = nil;
															v105 = nil;
															v99 = 3;
														end
													end
												end;
												v58 = 1;
											end
											if (v58 == 1) then
												v50 = nil;
												v38 = 7;
												break;
											end
										end
									end
									v52 = 1;
								end
								if (v52 == 2) then
									if (v38 == 1) then
										local v59 = 0;
										while true do
											if (v59 == 1) then
												v42 = nil;
												v38 = 2;
												break;
											end
											if (v59 == 0) then
												v41 = nil;
												v41 = function(v66, v67, v68)
													if v68 then
														local v112 = 0;
														local v113;
														local v114;
														while true do
															if (v112 == 1) then
																while true do
																	if (v113 == (0 + 0)) then
																		local v126 = 0;
																		while true do
																			if (v126 == 0) then
																				v114 = (v66 / (((27 - 18) - (4 + 3)) ^ (v67 - ((2061 - (224 + 1614)) - (26 + 196))))) % ((623 - (550 + 71)) ^ (((v68 - (1 - 0)) - (v67 - (1 + (0 - 0)))) + (3 - 2)));
																				return v114 - (v114 % (((709 + 2027) - (243 + 678)) - (550 + (1611 - (40 + 603)) + (909 - 613))));
																			end
																		end
																	end
																end
																break;
															end
															if (v112 == 0) then
																v113 = 0;
																v114 = nil;
																v112 = 1;
															end
														end
													else
														local v115 = 0;
														local v116;
														local v117;
														while true do
															if (v115 == 1) then
																while true do
																	if (v116 == (1685 - (1361 + 324))) then
																		local v127 = 0;
																		while true do
																			if (v127 == 0) then
																				v117 = (9 - 7) ^ (v67 - ((1 + 0) - (778 - (565 + 213))));
																				return (((v66 % (v117 + v117)) >= v117) and ((176 + 1) - (157 + 6 + 13))) or ((2695 - (1792 - 938)) - ((392 - 219) + ((4080 + 1738) - 4150)));
																			end
																		end
																	end
																end
																break;
															end
															if (0 == v115) then
																v116 = 297 - (174 + 123);
																v117 = nil;
																v115 = 1;
															end
														end
													end
												end;
												v59 = 1;
											end
										end
									end
									if (v38 == 5) then
										local v60 = 0;
										while true do
											if (v60 == 0) then
												v47 = v44;
												v48 = nil;
												v60 = 1;
											end
											if (v60 == 1) then
												v48 = function(...)
													return {...}, v20("#", ...);
												end;
												v38 = 6;
												break;
											end
										end
									end
									v52 = 3;
								end
							end
						end
						break;
					end
					if (v37 == 1) then
						v41 = nil;
						v42 = nil;
						v43 = nil;
						v37 = 2;
					end
					if (0 == v37) then
						v38 = 0;
						v39 = nil;
						v40 = nil;
						v37 = 1;
					end
				end
			end;
			vv17(), ...);
			break;
		end
		if (v24 == 0) then
			v0 = string.char;
			v1 = string.byte;
			v2 = string.sub;
			v24 = 1;
		end
	end
end
